{"ast":null,"code":"import { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE } from '../reducers/user'; //-------------------------------------------------- LOAD_FOLLOWINGS\n\nfunction loadFollowingsAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n} //-------------------------------------------------- CHANGE_NICKNAME\n\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n} //-------------------------------------------------- LOAD_USER\n\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser() {\n  try {\n    const result = yield call(loadUserAPI);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n} //-------------------------------------------------- LOG_IN\n\n\nfunction logInAPI(data) {\n  //return axios.post('http://localhost:3065/user/login', data);\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n} //-------------------------------------------------- LOG_OUT\n\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n} //-------------------------------------------------- SIGN_UP\n\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data); // yield delay(1000);\n\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n} //-------------------------------------------------- FOLLOW\n\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n} //-------------------------------------------------- UNFOLLOW\n\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data // 현 게시글 작성자 아이디\n\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n} //-------------------------------------------------- userSaga\n\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadUser), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/sagas/user.js"],"names":["all","fork","put","takeLatest","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","loadFollowingsAPI","data","patch","nickname","loadFollowings","action","result","type","err","error","response","watchLoadFollowings","changeNicknameAPI","changeNickname","watchChangeNickname","loadUserAPI","get","loadUser","watchLoadUser","logInAPI","post","logIn","watchLogIn","logOutAPI","logOut","watchLogOut","signUpAPI","signUp","console","log","watchSignUp","followAPI","follow","watchFollow","unfollowAPI","delete","unfollow","watchUnfollow","userSaga","watchLoadFollowers"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { \n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, \n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, \n    UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST,\n    LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\n    CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE,\n    LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE,\n    LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE,\n} from '../reducers/user';\n\n//-------------------------------------------------- LOAD_FOLLOWINGS\nfunction loadFollowingsAPI(data) {\n    return axios.patch('/user/nickname', { nickname: data });\n}\n\nfunction* loadFollowings(action) {\n    try {\n        const result = yield call(loadFollowingsAPI, action.data);\n\n        yield put({\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadFollowings() {\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n//-------------------------------------------------- CHANGE_NICKNAME\nfunction changeNicknameAPI(data) {\n    return axios.patch('/user/nickname', { nickname: data });\n}\n\nfunction* changeNickname(action) {\n    try {\n        const result = yield call(changeNicknameAPI, action.data);\n\n        yield put({\n            type: CHANGE_NICKNAME_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: CHANGE_NICKNAME_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchChangeNickname() {\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\n//-------------------------------------------------- LOAD_USER\nfunction loadUserAPI() {\n    return axios.get('/user');\n}\nfunction* loadUser() {\n    try {\n        const result = yield call(loadUserAPI);\n\n        yield put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOAD_USER_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadUser() {\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\n//-------------------------------------------------- LOG_IN\nfunction logInAPI(data) {\n    //return axios.post('http://localhost:3065/user/login', data);\n    return axios.post('/user/login', data);\n}\nfunction* logIn(action) {\n    try {\n        const result = yield call(logInAPI, action.data);\n\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOG_IN_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLogIn() {\n    yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\n//-------------------------------------------------- LOG_OUT\nfunction logOutAPI() {\n    return axios.post('/user/logout');\n}\nfunction* logOut() {\n    try {\n        yield call(logOutAPI);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch (err) {\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchLogOut() {\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\n//-------------------------------------------------- SIGN_UP\nfunction signUpAPI(data) {\n    return axios.post('/user', data); \n}\nfunction* signUp(action) {\n    try {\n        const result = yield call(signUpAPI, action.data);\n        // yield delay(1000);\n        console.log(result);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch (err) {\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchSignUp() {\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\n//-------------------------------------------------- FOLLOW\nfunction followAPI(data) { return axios.patch(`/user/${data}/follow`); }\n\nfunction* follow(action) {\n    try {\n        const result = yield call(followAPI, action.data);\n        yield put({\n            type: FOLLOW_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: FOLLOW_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchFollow() {\n    yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\n//-------------------------------------------------- UNFOLLOW\nfunction unfollowAPI(data) { return axios.delete(`/user/${data}/follow`); }\n\nfunction* unfollow(action) {\n    try {\n        const result = yield call(unfollowAPI, action.data);\n        yield put({\n            type: UNFOLLOW_SUCCESS,\n            data: result.data, // 현 게시글 작성자 아이디\n        });\n    } catch (err) {\n        yield put({\n            type: UNFOLLOW_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchUnfollow() {\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\n//-------------------------------------------------- userSaga\nexport default function* userSaga() {\n    yield all([\n        fork(watchLoadFollowers),\n        fork(watchLoadFollowings),\n        fork(watchChangeNickname),\n        fork(watchLoadUser),\n        fork(watchLogIn),\n        fork(watchLogOut),\n        fork(watchSignUp),\n        fork(watchFollow),\n        fork(watchUnfollow),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}