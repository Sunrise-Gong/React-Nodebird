{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'antd';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\nconst FollowButton = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const {\n    me,\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user);\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id); // 게시글 작성자의 아이디가 나의 팔로잉 목록에 있는가 찾기\n\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      // 팔로잉 목록에 있다면\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      // 팔로잉 목록에 없다면\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n\n  if (post.User.id === me.id) {\n    return null;\n  } // 본인의 게시글인 경우 팔로우 버튼 없음\n\n\n  return __jsx(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton\n  }, isFollowing ? '언팔로우' : '팔로우');\n};\n\nexport default FollowButton;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/components/FollowButton.js"],"names":["React","useCallback","useSelector","useDispatch","Button","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButton","post","dispatch","me","followLoading","unfollowLoading","state","user","isFollowing","Followings","find","v","id","User","onClickButton","type","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,MAAT,QAAuB,MAAvB;AAEA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC/B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA,EAAF;AAAMC,IAAAA,aAAN;AAAqBC,IAAAA;AAArB,MAAyCV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1D;AACA,QAAMC,WAAW,GAAGL,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEM,UAAJ,CAAeC,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACY,IAAL,CAAUD,EAA9C,CAApB,CAH+B,CAGwC;;AAEvE,QAAME,aAAa,GAAGpB,WAAW,CAAC,MAAM;AACpC,QAAIc,WAAJ,EAAiB;AAAE;AACfN,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAEhB,gBADD;AAELiB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH,KALD,MAKO;AAAE;AACLV,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAEjB,cADD;AAELkB,QAAAA,IAAI,EAAEf,IAAI,CAACY,IAAL,CAAUD;AAFX,OAAD,CAAR;AAIH;AACJ,GAZgC,EAY9B,CAACJ,WAAD,CAZ8B,CAAjC;;AAcA,MAAIP,IAAI,CAACY,IAAL,CAAUD,EAAV,KAAiBT,EAAE,CAACS,EAAxB,EAA4B;AAAE,WAAO,IAAP;AAAc,GAnBb,CAmBc;;;AAE7C,SACA,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,aAAa,IAAIC,eAAlC;AAAmD,IAAA,OAAO,EAAES;AAA5D,KACKN,WAAW,GAAG,MAAH,GAAY,KAD5B,CADA;AAKH,CA1BD;;AAgCA,eAAeR,YAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\n\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\nconst FollowButton = ({ post }) => {\n    const dispatch = useDispatch();\n    const { me, followLoading, unfollowLoading } = useSelector((state) => state.user);\n    const isFollowing = me?.Followings.find((v) => v.id === post.User.id); // 게시글 작성자의 아이디가 나의 팔로잉 목록에 있는가 찾기\n    \n    const onClickButton = useCallback(() => {\n        if (isFollowing) { // 팔로잉 목록에 있다면\n            dispatch({\n                type: UNFOLLOW_REQUEST,\n                data: post.User.id,\n            });\n        } else { // 팔로잉 목록에 없다면\n            dispatch({\n                type: FOLLOW_REQUEST,\n                data: post.User.id,\n            });\n        }\n    }, [isFollowing]);\n    \n    if (post.User.id === me.id) { return null; } // 본인의 게시글인 경우 팔로우 버튼 없음\n    \n    return (\n    <Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\n        {isFollowing ? '언팔로우' : '팔로우'}\n    </Button>\n    );\n};\n\nFollowButton.propTypes = {\n    post: PropTypes.object.isRequired,\n};\n\nexport default FollowButton;"]},"metadata":{},"sourceType":"module"}