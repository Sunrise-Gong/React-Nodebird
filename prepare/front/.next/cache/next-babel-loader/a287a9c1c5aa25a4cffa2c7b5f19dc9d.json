{"ast":null,"code":"var _jsxFileName = \"/Users/haedod-i/Desktop/React-Nodebird/prepare/front/pages/profile.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport useSWR from 'swr';\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/FollowList';\nimport { useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\n\nconst fetcher = url => axios.get(url, {\n  withCredentials: true\n}).then(result => result.data);\n\nconst Profile = () => {\n  //const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    0: followersLimit,\n    1: setFollowersLimit\n  } = useState(3);\n  const {\n    data: followersData,\n    error: followerError\n  } = useSWR(`http://localhost:3065/user/followers?limit=${followersLimit}`, fetcher);\n  const {\n    data: followingsData,\n    error: followingError\n  } = useSWR(`http://localhost:3065/user/followings?limit=${followingsLimit}`, fetcher); // useEffect(() => {\n  //     dispatch({ type: LOAD_FOLLOWERS_REQUEST });\n  //     dispatch({ type: LOAD_FOLLOWINGS_REQUEST });\n  // }, []);\n\n  useEffect(() => {\n    if (!(me && me.id)) {\n      Router.push('/');\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }\n    }, \"\\uB85C\\uADF8\\uC778 \\uC0C1\\uD0DC\\uAC00 \\uC544\\uB2D9\\uB2C8\\uB2E4.\");\n  }\n\n  if (followerError || followingError) {\n    console.error(followerError || followingError);\n    return '팔로잉/팔로워 로딩 중 에러가 발생합니다';\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\")), __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(NicknameEditForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC789 \\uBAA9\\uB85D\",\n    data: followingsData\n    /*me.Followings*/\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), __jsx(FollowList, {\n    header: \"\\uD314\\uB85C\\uC6CC \\uBAA9\\uB85D\",\n    data: followersData\n    /*me.Followers*/\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log('getServerSideProps 시작');\n  console.log('헤더', context.req.headers);\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  console.log('getServerSideProps 끝');\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/pages/profile.js"],"names":["React","useEffect","useState","AppLayout","Head","END","axios","useSWR","NicknameEditForm","FollowList","useSelector","Router","LOAD_MY_INFO_REQUEST","wrapper","fetcher","url","get","withCredentials","then","result","data","Profile","me","state","user","followersLimit","setFollowersLimit","followersData","error","followerError","followingsData","followingError","followingsLimit","id","push","console","getServerSideProps","context","log","req","headers","cookie","defaults","Cookie","store","dispatch","type","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport useSWR from 'swr';\n\nimport NicknameEditForm from '../components/NicknameEditForm';\nimport FollowList from '../components/FollowList';\nimport { useSelector } from 'react-redux';\nimport Router from 'next/router';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\n\nconst fetcher = (url) => axios.get(url, { withCredentials: true }).then((result) => result.data);\n\nconst Profile = () => {\n    //const dispatch = useDispatch();\n    const { me } = useSelector((state) => state.user);\n    const [followersLimit, setFollowersLimit] = useState(3);\n    \n    const { data: followersData, error: followerError } = useSWR(`http://localhost:3065/user/followers?limit=${followersLimit}`, fetcher);\n    const { data: followingsData, error: followingError } = useSWR(`http://localhost:3065/user/followings?limit=${followingsLimit}`, fetcher);\n\n    // useEffect(() => {\n    //     dispatch({ type: LOAD_FOLLOWERS_REQUEST });\n    //     dispatch({ type: LOAD_FOLLOWINGS_REQUEST });\n    // }, []);\n\n    useEffect(() => { if (!(me && me.id)) { Router.push('/'); } }, [me && me.id]);\n    \n    if (!me) { return <div>로그인 상태가 아닙니다.</div>; }\n\n    if (followerError || followingError) {\n        console.error(followerError || followingError);\n        return '팔로잉/팔로워 로딩 중 에러가 발생합니다';\n    }\n    \n    return (\n        <>\n            <Head>\n                <title>내 프로필 | NodeBird</title>\n            </Head>\n            <AppLayout>\n                <NicknameEditForm />\n                <FollowList header=\"팔로잉 목록\" data={followingsData/*me.Followings*/} />\n                <FollowList header=\"팔로워 목록\" data={followersData/*me.Followers*/} />\n            </AppLayout>\n        </>\n    );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    console.log('getServerSideProps 시작');\n    console.log('헤더', context.req.headers);\n    \n    const cookie = context.req ? context.req.headers.cookie : '';\n    \n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) { axios.defaults.headers.Cookie = cookie; }\n\n    context.store.dispatch({ type: LOAD_MY_INFO_REQUEST });\n    \n    context.store.dispatch(END);\n    console.log('getServerSideProps 끝');\n    \n    await context.store.sagaTask.toPromise();\n});\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}