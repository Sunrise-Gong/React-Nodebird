{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const initialState = {\n  //------------------------ 로그인\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  //------------------------ 로그아웃\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  //------------------------ 회원가입\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  me: null,\n  signUpData: {},\n  logOutData: {}\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    //-------------------------------------- LOG_IN\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true\n      });\n\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: true,\n        me: _objectSpread(_objectSpread({}, action.data), {}, {\n          nickname: '로또된다'\n        })\n      });\n\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isLoggedIn: false\n      });\n    //-------------------------------------- LOG_OUT\n\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true\n      });\n\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isLoggedIn: false,\n        me: null\n      });\n\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/reducers/user.js"],"names":["initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","me","signUpData","logOutData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","isLoggingIn","isLoggedIn","nickname","isLoggingOut"],"mappings":";;;;;;AAAA,OAAO,MAAMA,YAAY,GAAG;AACxB;AACAC,EAAAA,YAAY,EAAE,KAFU;AAGxBC,EAAAA,SAAS,EAAE,KAHa;AAIxBC,EAAAA,UAAU,EAAE,IAJY;AAKxB;AACAC,EAAAA,aAAa,EAAE,KANS;AAOxBC,EAAAA,UAAU,EAAE,KAPY;AAQxBC,EAAAA,WAAW,EAAE,IARW;AASxB;AACAC,EAAAA,aAAa,EAAE,KAVS;AAWxBC,EAAAA,UAAU,EAAE,KAXY;AAYxBC,EAAAA,WAAW,EAAE,IAZW;AAcpBC,EAAAA,EAAE,EAAE,IAdgB;AAepBC,EAAAA,UAAU,EAAE,EAfQ;AAgBpBC,EAAAA,UAAU,EAAE;AAhBQ,CAArB;AAmBP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,kBAAkB,GAAKC,IAAD,IAAU;AACzC,SAAO;AACHC,IAAAA,IAAI,EAAEjB,cADH;AAEHgB,IAAAA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAG,MAAM;AACrC,SAAO;AACHD,IAAAA,IAAI,EAAEd;AADH,GAAP;AAGH,CAJM;;AAOP,MAAMgB,OAAO,GAAG,CAACC,KAAK,GAAGjC,YAAT,EAAuBkC,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACJ,IAAf;AACI;AACA,SAAKjB,cAAL;AACI,6CACWoB,KADX;AAEQE,QAAAA,WAAW,EAAE;AAFrB;;AAIJ,SAAKrB,cAAL;AACI,6CACWmB,KADX;AAEQE,QAAAA,WAAW,EAAE,KAFrB;AAGQC,QAAAA,UAAU,EAAE,IAHpB;AAIQ1B,QAAAA,EAAE,kCAAOwB,MAAM,CAACL,IAAd;AAAoBQ,UAAAA,QAAQ,EAAE;AAA9B;AAJV;;AAMJ,SAAKtB,cAAL;AACI,6CACWkB,KADX;AAEQE,QAAAA,WAAW,EAAE,KAFrB;AAGQC,QAAAA,UAAU,EAAE;AAHpB;AAKJ;;AACA,SAAKpB,eAAL;AACI,6CACWiB,KADX;AAEQK,QAAAA,YAAY,EAAE;AAFtB;;AAIJ,SAAKrB,eAAL;AACI,6CACWgB,KADX;AAEQK,QAAAA,YAAY,EAAE,KAFtB;AAGQF,QAAAA,UAAU,EAAE,KAHpB;AAIQ1B,QAAAA,EAAE,EAAE;AAJZ;;AAMJ,SAAKQ,eAAL;AACI,6CACWe,KADX;AAEQK,QAAAA,YAAY,EAAE;AAFtB;;AAIJ;AACI,aAAOL,KAAP;AAvCR;AAyCH,CA1CD;;AA4CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n    //------------------------ 로그인\n    logInLoading: false,\n    logInDone: false,\n    logInError: null, \n    //------------------------ 로그아웃\n    logOutLoading: false,\n    logOutDone: false,\n    logOutError: null, \n    //------------------------ 회원가입\n    signUpLoading: false,\n    signUpDone: false,\n    signUpError: null, \n    \n        me: null,\n        signUpData: {},\n        logOutData: {},\n}\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'\n\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST'\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS'\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE'\n\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST'\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS'\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE'\n\nexport const loginRequestAction  = (data) => {\n    return {\n        type: LOG_IN_REQUEST,\n        data,\n    }\n}\n\nexport const logoutRequestAction = () => {\n    return {\n        type: LOG_OUT_REQUEST,\n    }\n}\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        //-------------------------------------- LOG_IN\n        case LOG_IN_REQUEST:\n            return {\n                    ...state,\n                    isLoggingIn: true,\n                }\n        case LOG_IN_SUCCESS:\n            return {\n                    ...state,\n                    isLoggingIn: false,\n                    isLoggedIn: true,\n                    me: { ...action.data, nickname: '로또된다' }\n                }\n        case LOG_IN_FAILURE:\n            return {\n                    ...state,\n                    isLoggingIn: false, \n                    isLoggedIn: false,\n                }\n        //-------------------------------------- LOG_OUT\n        case LOG_OUT_REQUEST:\n            return {\n                    ...state,\n                    isLoggingOut: true,\n                }\n        case LOG_OUT_SUCCESS:\n            return {\n                    ...state,\n                    isLoggingOut: false,\n                    isLoggedIn: false,\n                    me: null,\n                }\n        case LOG_OUT_FAILURE:\n            return {\n                    ...state,\n                    isLoggingOut: false,\n                }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}