{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/haedod-i/Desktop/React-Nodebird/prepare/front/components/NicknameEditForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useMemo } from 'react';\nimport { Form, Input } from 'antd';\nimport { CHANGE_NICKNAME_REQUEST } from '../reducers/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\n\nvar NicknameEditForm = function NicknameEditForm() {\n  _s();\n\n  var style = useMemo(function () {\n    return {\n      marginBottom: '20px',\n      border: '1px solid #d9d9d9',\n      padding: '20px'\n    };\n  }, []);\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useInput = useInput((me === null || me === void 0 ? void 0 : me.nickname) || ''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      nickname = _useInput2[0],\n      onChangeNickname = _useInput2[1];\n\n  var dispatch = useDispatch();\n  var onSubmit = useCallback(function () {\n    dispatch({\n      type: CHANGE_NICKNAME_REQUEST,\n      data: nickname\n    });\n  }, [nickname]);\n  return __jsx(Form, {\n    style: style,\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Input.Search, {\n    value: nickname,\n    onChange: onChangeNickname,\n    addonBefore: \"\\uB2C9\\uB124\\uC784\",\n    enterButton: \"\\uC218\\uC815\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(NicknameEditForm, \"Ox+LgIBDYkSmU+oM261mckxdo9c=\", false, function () {\n  return [useSelector, useInput, useDispatch];\n});\n\n_c = NicknameEditForm;\nexport default NicknameEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NicknameEditForm\");","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/components/NicknameEditForm.js"],"names":["React","useCallback","useMemo","Form","Input","CHANGE_NICKNAME_REQUEST","useDispatch","useSelector","useInput","NicknameEditForm","style","marginBottom","border","padding","state","user","me","nickname","onChangeNickname","dispatch","onSubmit","type","data"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAC3B,MAAMC,KAAK,GAAGR,OAAO,CAAC;AAAA,WAAO;AACzBS,MAAAA,YAAY,EAAE,MADW;AAEzBC,MAAAA,MAAM,EAAE,mBAFiB;AAGzBC,MAAAA,OAAO,EAAE;AAHgB,KAAP;AAAA,GAAD,EAIjB,EAJiB,CAArB;;AAKA,qBAAeN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA1B;AAAA,MAAQC,EAAR,gBAAQA,EAAR;;AACA,kBAAqCR,QAAQ,CAAC,CAAAQ,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAEC,QAAJ,KAAgB,EAAjB,CAA7C;AAAA;AAAA,MAAOA,QAAP;AAAA,MAAiBC,gBAAjB;;AAEA,MAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,MAAMc,QAAQ,GAAGnB,WAAW,CAAC,YAAM;AAC/BkB,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEhB,uBAAR;AAAiCiB,MAAAA,IAAI,EAAEL;AAAvC,KAAD,CAAR;AACH,GAF2B,EAEzB,CAACA,QAAD,CAFyB,CAA5B;AAIA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,KAAb;AAAoB,IAAA,QAAQ,EAAEU,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,MAAP;AACA,IAAA,KAAK,EAAEH,QADP;AAEA,IAAA,QAAQ,EAAEC,gBAFV;AAGA,IAAA,WAAW,EAAC,oBAHZ;AAIA,IAAA,WAAW,EAAC,cAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH,CAxBD;;GAAMT,gB;UAMaF,W,EACsBC,Q,EAEpBF,W;;;KATfG,gB;AA0BN,eAAeA,gBAAf","sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport { Form, Input } from 'antd';\nimport { CHANGE_NICKNAME_REQUEST } from '../reducers/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\n\nconst NicknameEditForm = () => {\n    const style = useMemo(() => ({\n        marginBottom: '20px',\n        border: '1px solid #d9d9d9',\n        padding: '20px',\n    }), []);\n    const { me } = useSelector((state) => state.user);\n    const [nickname, onChangeNickname] = useInput(me?.nickname || '');\n    \n    const dispatch = useDispatch();\n    const onSubmit = useCallback(() => {\n        dispatch({ type: CHANGE_NICKNAME_REQUEST, data: nickname });\n    }, [nickname]);\n    \n    return (\n        <Form style={style} onFinish={onSubmit}>\n            <Input.Search \n            value={nickname}\n            onChange={onChangeNickname}\n            addonBefore=\"닉네임\" \n            enterButton=\"수정\" \n            />\n        </Form>\n    );\n};\n\nexport default NicknameEditForm;"]},"metadata":{},"sourceType":"module"}