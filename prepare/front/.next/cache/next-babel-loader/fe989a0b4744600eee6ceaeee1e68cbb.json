{"ast":null,"code":"var _jsxFileName = \"/Users/haedod-i/Desktop/React-Nodebird/prepare/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\n// PostCard.js 의 자식\nimport React, { useCallback } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useinput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post'; //----------------------------------------\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [commentText, onChangeCommentText] = useInput('');\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText, id);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText]); //----------------------------------------\n\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -35\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","Button","Form","Input","PropTypes","useInput","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","commentText","onChangeCommentText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,EAAE,GAAGL,WAAW,CAAEM,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AAEA,QAAM,CAACI,WAAD,EAAcC,mBAAd,IAAqCZ,QAAQ,CAAC,EAAD,CAAnD;AAEA,QAAMa,eAAe,GAAGlB,WAAW,CAAC,MAAM;AACtCmB,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACE,EAAjB,EAAqBI,WAArB,EAAkCJ,EAAlC;AACAD,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEb,mBADD;AAELc,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAEP,WAAX;AAAwBQ,QAAAA,MAAM,EAAEd,IAAI,CAACE,EAArC;AAAyCa,QAAAA,MAAM,EAAEb;AAAjD;AAFD,KAAD,CAAR;AAIH,GANkC,EAMhC,CAACI,WAAD,CANgC,CAAnC,CAP8B,CAclC;;AACI,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEQ,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,KAAD,CAAO,QAAP;AACI,IAAA,KAAK,EAAEX,WADX;AAEI,IAAA,QAAQ,EAAEC,mBAFd;AAGI,IAAA,IAAI,EAAE,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOI,MAAC,MAAD;AACI,IAAA,KAAK,EAAE;AAAES,MAAAA,QAAQ,EAAE,UAAZ;AAAwBE,MAAAA,KAAK,EAAE,CAA/B;AAAkCC,MAAAA,MAAM,EAAE,CAAC;AAA3C,KADX;AAEI,IAAA,IAAI,EAAC,SAFT;AAGI,IAAA,QAAQ,EAAC,QAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,CAFJ,CADJ;AAoBH,CAnCD;;AAqCApB,WAAW,CAACqB,SAAZ,GAAwB;AACpBpB,EAAAA,IAAI,EAAEN,SAAS,CAAC2B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAevB,WAAf","sourcesContent":["// PostCard.js 의 자식\nimport React, { useCallback } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport useInput from '../hooks/useinput';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\n\n//----------------------------------------\nconst CommentForm = ({ post }) => {\n    const dispatch = useDispatch();\n\n    const id = useSelector((state) => state.user.me?.id);\n    \n    const [commentText, onChangeCommentText] = useInput('');\n\n    const onSubmitComment = useCallback(() => {\n        console.log(post.id, commentText, id);\n        dispatch({\n            type: ADD_COMMENT_REQUEST,\n            data: { content: commentText, postId: post.id, userId: id  },\n        });\n    }, [commentText]);\n//----------------------------------------\n    return (\n        <Form onFinish={onSubmitComment}>\n\n            <Form.Item style={{ position: 'relative', margin: 0 }}>\n\n                <Input.TextArea\n                    value={commentText}\n                    onChange={onChangeCommentText}\n                    rows={5} />\n\n                <Button\n                    style={{ position: 'absolute', right: 0, bottom: -35 }}\n                    type=\"primary\"\n                    htmlType=\"submit\">\n                    삐약</Button>\n\n            </Form.Item>\n\n        </Form>\n    )\n};\n\nCommentForm.propTypes = {\n    post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}