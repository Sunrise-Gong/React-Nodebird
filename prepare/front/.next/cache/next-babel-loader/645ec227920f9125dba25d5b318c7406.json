{"ast":null,"code":"import { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE } from '../reducers/user'; //-------------------------------------------------- REMOVE_FOLLOWER\n\nfunction removeFollowerAPI(data) {\n  return axios.delete(`/user/follower/${data}`);\n}\n\nfunction* removeFollower(action) {\n  try {\n    const result = yield call(removeFollowerAPI, action.data);\n    yield put({\n      type: REMOVE_FOLLOWER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_FOLLOWER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchRemoveFollower() {\n  yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n} //-------------------------------------------------- LOAD_FOLLOWERS\n\n\nfunction loadFollowersAPI() {\n  return axios.get('/user/followers');\n}\n\nfunction* loadFollowers(action) {\n  try {\n    const result = yield call(loadFollowersAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWERS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWERS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadFollowers() {\n  yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n} //-------------------------------------------------- LOAD_FOLLOWINGS\n\n\nfunction loadFollowingsAPI(data) {\n  return axios.get('/user/followings', data);\n}\n\nfunction* loadFollowings(action) {\n  try {\n    const result = yield call(loadFollowingsAPI, action.data);\n    yield put({\n      type: LOAD_FOLLOWINGS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_FOLLOWINGS_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadFollowings() {\n  yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n} //-------------------------------------------------- CHANGE_NICKNAME\n\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n} //-------------------------------------------------- LOAD_USER\n\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser() {\n  try {\n    const result = yield call(loadUserAPI);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n} //-------------------------------------------------- LOG_IN\n\n\nfunction logInAPI(data) {\n  //return axios.post('http://localhost:3065/user/login', data);\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n} //-------------------------------------------------- LOG_OUT\n\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n} //-------------------------------------------------- SIGN_UP\n\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data); // yield delay(1000);\n\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n} //-------------------------------------------------- FOLLOW\n\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n} //-------------------------------------------------- UNFOLLOW\n\n\nfunction unfollowAPI(data) {\n  return axios.delete(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data // 현 게시글 작성자 아이디\n\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n} //-------------------------------------------------- userSaga\n\n\nexport default function* userSaga() {\n  yield all([fork(watchRemoveFollower), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchChangeNickname), fork(watchLoadUser), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/sagas/user.js"],"names":["all","fork","put","takeLatest","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","removeFollowerAPI","data","delete","removeFollower","action","result","type","err","error","response","watchRemoveFollower","loadFollowersAPI","get","loadFollowers","watchLoadFollowers","loadFollowingsAPI","loadFollowings","watchLoadFollowings","changeNicknameAPI","patch","nickname","changeNickname","watchChangeNickname","loadUserAPI","loadUser","watchLoadUser","logInAPI","post","logIn","watchLogIn","logOutAPI","logOut","watchLogOut","signUpAPI","signUp","console","log","watchSignUp","followAPI","follow","watchFollow","unfollowAPI","unfollow","watchUnfollow","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { \n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, \n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, \n    UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST,\n    LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\n    CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE,\n    LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE,\n    LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE,\n    REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE,\n} from '../reducers/user';\n\n//-------------------------------------------------- REMOVE_FOLLOWER\nfunction removeFollowerAPI(data) { return axios.delete(`/user/follower/${data}`); }\n\nfunction* removeFollower(action) {\n    try {\n        const result = yield call(removeFollowerAPI, action.data);\n\n        yield put({\n            type: REMOVE_FOLLOWER_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: REMOVE_FOLLOWER_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchRemoveFollower() {\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\n//-------------------------------------------------- LOAD_FOLLOWERS\nfunction loadFollowersAPI() { return axios.get('/user/followers'); }\n\nfunction* loadFollowers(action) {\n    try {\n        const result = yield call(loadFollowersAPI, action.data);\n\n        yield put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadFollowers() {\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\n//-------------------------------------------------- LOAD_FOLLOWINGS\nfunction loadFollowingsAPI(data) { return axios.get('/user/followings', data); }\n\nfunction* loadFollowings(action) {\n    try {\n        const result = yield call(loadFollowingsAPI, action.data);\n\n        yield put({\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadFollowings() {\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\n//-------------------------------------------------- CHANGE_NICKNAME\nfunction changeNicknameAPI(data) {\n    return axios.patch('/user/nickname', { nickname: data });\n}\n\nfunction* changeNickname(action) {\n    try {\n        const result = yield call(changeNicknameAPI, action.data);\n\n        yield put({\n            type: CHANGE_NICKNAME_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: CHANGE_NICKNAME_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchChangeNickname() {\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\n//-------------------------------------------------- LOAD_USER\nfunction loadUserAPI() {\n    return axios.get('/user');\n}\nfunction* loadUser() {\n    try {\n        const result = yield call(loadUserAPI);\n\n        yield put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOAD_USER_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadUser() {\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\n//-------------------------------------------------- LOG_IN\nfunction logInAPI(data) {\n    //return axios.post('http://localhost:3065/user/login', data);\n    return axios.post('/user/login', data);\n}\nfunction* logIn(action) {\n    try {\n        const result = yield call(logInAPI, action.data);\n\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOG_IN_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLogIn() {\n    yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\n//-------------------------------------------------- LOG_OUT\nfunction logOutAPI() {\n    return axios.post('/user/logout');\n}\nfunction* logOut() {\n    try {\n        yield call(logOutAPI);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch (err) {\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchLogOut() {\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\n//-------------------------------------------------- SIGN_UP\nfunction signUpAPI(data) {\n    return axios.post('/user', data); \n}\nfunction* signUp(action) {\n    try {\n        const result = yield call(signUpAPI, action.data);\n        // yield delay(1000);\n        console.log(result);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch (err) {\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchSignUp() {\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\n//-------------------------------------------------- FOLLOW\nfunction followAPI(data) { return axios.patch(`/user/${data}/follow`); }\n\nfunction* follow(action) {\n    try {\n        const result = yield call(followAPI, action.data);\n        yield put({\n            type: FOLLOW_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: FOLLOW_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchFollow() {\n    yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\n//-------------------------------------------------- UNFOLLOW\nfunction unfollowAPI(data) { return axios.delete(`/user/${data}/follow`); }\n\nfunction* unfollow(action) {\n    try {\n        const result = yield call(unfollowAPI, action.data);\n        yield put({\n            type: UNFOLLOW_SUCCESS,\n            data: result.data, // 현 게시글 작성자 아이디\n        });\n    } catch (err) {\n        yield put({\n            type: UNFOLLOW_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchUnfollow() {\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\n//-------------------------------------------------- userSaga\nexport default function* userSaga() {\n    yield all([\n        fork(watchRemoveFollower),\n        fork(watchLoadFollowers),\n        fork(watchLoadFollowings),\n        fork(watchChangeNickname),\n        fork(watchLoadUser),\n        fork(watchLogIn),\n        fork(watchLogOut),\n        fork(watchSignUp),\n        fork(watchFollow),\n        fork(watchUnfollow),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}