{"ast":null,"code":"// import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\n\nvar rootReducer = function rootReducer(state, action) {\n  switch (action.type) {\n    case HYDRATE:\n      break;\n\n    default:\n      {\n        var combinedReducer = combineReducers({\n          user: user,\n          post: post\n        });\n        return combinedReducer(state, action);\n      }\n  }\n};\n\nexport default rootReducer;\n/* SSR 적용전 \nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\n\nconst rootReducer = combineReducers({\n    index: (state = {}, action) => { // HYDRATE(SSR에 필요)를 넣기 위해서 이 부분이 필요합니다.\n        switch (action.type) {\n            case HYDRATE:\n                console.log('HYDRATE', action); \n                return { ...state, ...action.payload };\n    \n                default:\n                    return state;\n        }\n    },\n    user,\n    post,\n});\n\nexport default rootReducer;\n*/","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/reducers/index.js"],"names":["combineReducers","user","post","rootReducer","state","action","type","HYDRATE","combinedReducer"],"mappings":"AAAA;AACA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACnC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,OAAL;AACI;;AACJ;AAAS;AACL,YAAMC,eAAe,GAAGR,eAAe,CAAC;AACpCC,UAAAA,IAAI,EAAJA,IADoC;AAEpCC,UAAAA,IAAI,EAAJA;AAFoC,SAAD,CAAvC;AAIA,eAAOM,eAAe,CAACJ,KAAD,EAAQC,MAAR,CAAtB;AACH;AATL;AAWH,CAZD;;AAcA,eAAeF,WAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\n\nconst rootReducer = (state, action) => {\n    switch (action.type) { \n        case HYDRATE:\n            break;\n        default: {\n            const combinedReducer = combineReducers({\n                user,\n                post,\n            });\n            return combinedReducer(state, action);\n        }\n    }\n};\n\nexport default rootReducer;\n\n/* SSR 적용전 \nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\n\nconst rootReducer = combineReducers({\n    index: (state = {}, action) => { // HYDRATE(SSR에 필요)를 넣기 위해서 이 부분이 필요합니다.\n        switch (action.type) {\n            case HYDRATE:\n                console.log('HYDRATE', action); \n                return { ...state, ...action.payload };\n    \n                default:\n                    return state;\n        }\n    },\n    user,\n    post,\n});\n\nexport default rootReducer;\n*/"]},"metadata":{},"sourceType":"module"}