{"ast":null,"code":"import { all, fork, delay, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE } from '../reducers/user'; //-------------------------------------------------- CHANGE_NICKNAME\n\nfunction changeNicknameAPI(data) {\n  return axios.patch('/user/nickname', {\n    nickname: data\n  });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n} //-------------------------------------------------- LOAD_USER\n\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser() {\n  try {\n    const result = yield call(loadUserAPI);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n} //-------------------------------------------------- LOG_IN\n\n\nfunction logInAPI(data) {\n  //return axios.post('http://localhost:3065/user/login', data);\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n} //-------------------------------------------------- LOG_OUT\n\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n} //-------------------------------------------------- SIGN_UP\n\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data); // yield delay(1000);\n\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n} //-------------------------------------------------- FOLLOW\n// function followAPI() {\n//     return axios.post('/api/follow');\n// }\n\n\nfunction* follow(action) {\n  try {\n    //const result = yield call(followAPI)\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n} //-------------------------------------------------- UNFOLLOW\n// function unfollowAPI() {\n//     return axios.post('/api/unfollow');\n// }\n\n\nfunction* unfollow(action) {\n  try {\n    //const result = yield call(unfollowAPI)\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data // 현 게시글 작성자 아이디\n\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n} //-------------------------------------------------- userSaga\n\n\nexport default function* userSaga() {\n  yield all([fork(watchChangeNickname), fork(watchLoadUser), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/sagas/user.js"],"names":["all","fork","delay","put","takeLatest","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","changeNicknameAPI","data","patch","nickname","changeNickname","action","result","type","err","error","response","watchChangeNickname","loadUserAPI","get","loadUser","watchLoadUser","logInAPI","post","logIn","watchLogIn","logOutAPI","logOut","watchLogOut","signUpAPI","signUp","console","log","watchSignUp","follow","watchFollow","unfollow","watchUnfollow","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, delay, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { \n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, \n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, \n    UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST,\n    LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\n    CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE,\n} from '../reducers/user';\n\n//-------------------------------------------------- CHANGE_NICKNAME\nfunction changeNicknameAPI(data) {\n    return axios.patch('/user/nickname', { nickname: data });\n}\n\nfunction* changeNickname(action) {\n    try {\n        const result = yield call(changeNicknameAPI, action.data);\n\n        yield put({\n            type: CHANGE_NICKNAME_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: CHANGE_NICKNAME_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchChangeNickname() {\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\n//-------------------------------------------------- LOAD_USER\nfunction loadUserAPI() {\n    return axios.get('/user');\n}\nfunction* loadUser() {\n    try {\n        const result = yield call(loadUserAPI);\n\n        yield put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOAD_USER_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadUser() {\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\n//-------------------------------------------------- LOG_IN\nfunction logInAPI(data) {\n    //return axios.post('http://localhost:3065/user/login', data);\n    return axios.post('/user/login', data);\n}\nfunction* logIn(action) {\n    try {\n        const result = yield call(logInAPI, action.data);\n\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOG_IN_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLogIn() {\n    yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\n//-------------------------------------------------- LOG_OUT\nfunction logOutAPI() {\n    return axios.post('/user/logout');\n}\nfunction* logOut() {\n    try {\n        yield call(logOutAPI);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch (err) {\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchLogOut() {\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\n//-------------------------------------------------- SIGN_UP\nfunction signUpAPI(data) {\n    return axios.post('/user', data); \n}\nfunction* signUp(action) {\n    try {\n        const result = yield call(signUpAPI, action.data);\n        // yield delay(1000);\n        console.log(result);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch (err) {\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchSignUp() {\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\n//-------------------------------------------------- FOLLOW\n// function followAPI() {\n//     return axios.post('/api/follow');\n// }\nfunction* follow(action) {\n    try {\n        //const result = yield call(followAPI)\n        yield delay(1000);\n        yield put({\n            type: FOLLOW_SUCCESS,\n            data: action.data,\n        });\n    } catch (err) {\n        yield put({\n            type: FOLLOW_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchFollow() {\n    yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\n//-------------------------------------------------- UNFOLLOW\n// function unfollowAPI() {\n//     return axios.post('/api/unfollow');\n// }\nfunction* unfollow(action) {\n    try {\n        //const result = yield call(unfollowAPI)\n        yield delay(1000);\n        yield put({\n            type: UNFOLLOW_SUCCESS,\n            data: action.data, // 현 게시글 작성자 아이디\n        });\n    } catch (err) {\n        yield put({\n            type: UNFOLLOW_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchUnfollow() {\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\n//-------------------------------------------------- userSaga\nexport default function* userSaga() {\n    yield all([\n        fork(watchChangeNickname),\n        fork(watchLoadUser),\n        fork(watchLogIn),\n        fork(watchLogOut),\n        fork(watchSignUp),\n        fork(watchFollow),\n        fork(watchUnfollow),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}