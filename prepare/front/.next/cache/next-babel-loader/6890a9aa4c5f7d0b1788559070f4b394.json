{"ast":null,"code":"var _jsxFileName = \"/Users/haedod-i/Desktop/React-Nodebird/prepare/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { Button, Form, Input } from \"antd\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post'; //액션\n\nimport useInput from '../hooks/useInput';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const imageInput = useRef(); // const [text, setText] = useState('');\n\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    // 작성한 글이 업로드 되면 인풋창 비우기\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]); //const onChangeText = useCallback((e) => { setText(e.target.value); },[]) \n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text)); // setText(''); 여기서 지워졌는데 에러가 나면 작성한 글이 날아갈 수 있기 때문에 useEffect로..\n  }, [text]); //------------------------------------------------\n\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20 px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, imagePaths.map(v => {\n    // 이미지 업로드 미리보기 부분\n    __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useRef","useEffect","Button","Form","Input","useDispatch","useSelector","addPost","useInput","PostForm","dispatch","imagePaths","addPostDone","state","post","imageInput","text","onChangeText","setText","onClickImageUpload","current","click","onSubmit","margin","marginBottom","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useEffect } from 'react';\nimport { Button, Form, Input } from \"antd\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';//액션\nimport useInput from '../hooks/useInput';\n\nconst PostForm = () => {\n    \n    const dispatch = useDispatch();\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\n    const imageInput = useRef();\n    // const [text, setText] = useState('');\n    const [text, onChangeText, setText] = useInput('');\n    \n    useEffect(()=> { // 작성한 글이 업로드 되면 인풋창 비우기\n        if (addPostDone) { setText(''); }\n    },[addPostDone])\n\n    //const onChangeText = useCallback((e) => { setText(e.target.value); },[]) \n    \n    const onClickImageUpload = useCallback(() => {\n        imageInput.current.click();\n    }, [imageInput.current]);\n\n    const onSubmit = useCallback(() => {\n        dispatch(addPost(text));\n        // setText(''); 여기서 지워졌는데 에러가 나면 작성한 글이 날아갈 수 있기 때문에 useEffect로..\n    }, [text]);\n//------------------------------------------------\n    return (\n        <Form\n            style={{ margin: '10px 0 20 px' }}\n            encType=\"multipart/form-data\"\n            onFinish={onSubmit}>\n\n            <Input.TextArea\n                value={text}\n                onChange={onChangeText}\n                maxLength={140}\n                placeholder=\"어떤 신기한 일이 있었나요?\" />\n\n            <div style={{ marginBottom: 20 }}>\n                <input type=\"file\" multiple hidden ref={imageInput} />\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n                <Button\n                    type=\"primary\"\n                    style={{ float: 'right' }}\n                    htmlType=\"submit\">\n                    짹짹\n                </Button>\n            </div>\n\n            <div>\n                {imagePaths.map((v) => { // 이미지 업로드 미리보기 부분\n                    <div key={v} style={{ display: 'inline-block' }}>\n                        <img src={v} style={{ width: '200px' }} alt={v} />\n                        <div>\n                            <Button>제거</Button>\n                        </div>\n                    </div>\n                })}\n            </div>\n        </Form>\n    )\n};\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}