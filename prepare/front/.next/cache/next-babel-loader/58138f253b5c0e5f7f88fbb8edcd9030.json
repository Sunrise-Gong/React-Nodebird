{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/haedod-i/Desktop/React-Nodebird/prepare/front/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post'; //액션\n\nimport useInput from '../hooks/useInput';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2]; //------------------------------------------------ 작성한 글이 업로드 성공시 인풋창 비우기\n\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]); //------------------------------------------------ 이미지 업로드 버튼 클릭\n\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]); //------------------------------------------------ 게시글 등록버튼 클릭\n\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text)); // setText(''); 여기서 지워졌는데 에러가 나면 작성한 글이 날아갈 수 있기 때문에 useEffect로..\n  }, [text]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20 px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, imagePaths.map(function (v) {\n    // 이미지 업로드 미리보기 부분\n    __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"GyajyjH1tYbmQdWeTHMwJnPe4Zw=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useRef","useEffect","Button","Form","Input","useDispatch","useSelector","addPost","useInput","PostForm","state","post","imagePaths","addPostDone","dispatch","text","onChangeText","setText","imageInput","onClickImageUpload","current","click","onSubmit","margin","marginBottom","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';//액션\nimport useInput from '../hooks/useInput';\n\nconst PostForm = () => {\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\n    const dispatch = useDispatch();\n    const [text, onChangeText, setText] = useInput('');\n//------------------------------------------------ 작성한 글이 업로드 성공시 인풋창 비우기\n    \n    useEffect(() => { if (addPostDone) { setText(''); } }, [addPostDone]);\n\n//------------------------------------------------ 이미지 업로드 버튼 클릭\n    const imageInput = useRef();\n    const onClickImageUpload = useCallback(() => {\n        imageInput.current.click();\n    }, [imageInput.current]);\n\n//------------------------------------------------ 게시글 등록버튼 클릭\n    const onSubmit = useCallback(() => {\n        dispatch(addPost(text));\n        // setText(''); 여기서 지워졌는데 에러가 나면 작성한 글이 날아갈 수 있기 때문에 useEffect로..\n    }, [text]);\n\n    return (\n        <Form\n            style={{ margin: '10px 0 20 px' }}\n            encType=\"multipart/form-data\"\n            onFinish={onSubmit}>\n{/* --------------------------------------------- 게시글 작성창 */}\n            <Input.TextArea\n                value={text}\n                onChange={onChangeText}\n                maxLength={140}\n                placeholder=\"어떤 신기한 일이 있었나요?\" />\n{/* --------------------------------------------- 이미지 or 게시글 등록 버튼 */}\n            <div style={{ marginBottom: 20 }}>\n                <input type=\"file\" multiple hidden ref={imageInput} />\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n                <Button\n                    type=\"primary\"\n                    style={{ float: 'right' }}\n                    htmlType=\"submit\">\n                    짹짹\n                </Button>\n            </div>\n\n            <div>\n                {imagePaths.map((v) => { // 이미지 업로드 미리보기 부분\n                    <div key={v} style={{ display: 'inline-block' }}>\n                        <img src={v} style={{ width: '200px' }} alt={v} />\n                        <div>\n                            <Button>제거</Button>\n                        </div>\n                    </div>;\n                })}\n            </div>\n        </Form>\n    );\n};\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}