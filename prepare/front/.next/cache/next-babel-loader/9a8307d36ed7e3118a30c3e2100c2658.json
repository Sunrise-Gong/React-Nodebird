{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '해돋이'\n    },\n    content: '안녕하세요 트위터 짝퉁 궁금해서 가입해봤습니다~  #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bit.ly/34S7zRp'\n    }, {\n      src: 'https://bit.ly/3uX6IJH'\n    }, {\n      src: 'https://bit.ly/2TDFv1w'\n    }],\n    Comments: [{\n      User: {\n        nickname: '재원'\n      },\n      content: '키보드 윤활해야지~'\n    }, {\n      User: {\n        nickname: '선범'\n      },\n      content: '여친이랑 산에 가야지~'\n    }]\n  }],\n  imagePaths: [],\n  // 이미지 업로드시 경로 저장\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n}; //-------------------------------------------- ADD_POST에 사용될 더미데이터\n\nvar dummyPost = {\n  id: 1,\n  content: '더미데이터입니다.',\n  User: {\n    id: 1,\n    nickname: '해돋이'\n  },\n  Images: [],\n  Comments: []\n}; //-------------------------------------------- 액션\n\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; //--------------------------------------------\n\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)) // 가장 위로 올라오도록\n\n      });\n\n    case ADD_POST_FAILURE:\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","dummyPost","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","reducer","state","action"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,SAAS,EAAE,CACP;AACIC,IAAAA,EAAE,EAAE,CADR;AAGIC,IAAAA,IAAI,EAAE;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASE,MAAAA,QAAQ,EAAE;AAAnB,KAHV;AAKIC,IAAAA,OAAO,EAAE,0CALb;AAOIC,IAAAA,MAAM,EAAE,CACJ;AAAEC,MAAAA,GAAG,EAAE;AAAP,KADI,EAEJ;AAAEA,MAAAA,GAAG,EAAE;AAAP,KAFI,EAGJ;AAAEA,MAAAA,GAAG,EAAE;AAAP,KAHI,CAPZ;AAaIC,IAAAA,QAAQ,EAAE,CACN;AAAEL,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAR;AAA4BC,MAAAA,OAAO,EAAE;AAArC,KADM,EAEN;AAAEF,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAR;AAA4BC,MAAAA,OAAO,EAAE;AAArC,KAFM;AAbd,GADO,CADa;AAqBxBI,EAAAA,UAAU,EAAE,EArBY;AAqBR;AAEhBC,EAAAA,cAAc,EAAE,KAvBQ;AAwBxBC,EAAAA,WAAW,EAAE,KAxBW;AAyBxBC,EAAAA,YAAY,EAAE,IAzBU;AA2BxBC,EAAAA,iBAAiB,EAAE,KA3BK;AA4BxBC,EAAAA,cAAc,EAAE,KA5BQ;AA6BxBC,EAAAA,eAAe,EAAE;AA7BO,CAArB,C,CA+BP;;AACA,IAAMC,SAAS,GAAG;AACdd,EAAAA,EAAE,EAAE,CADU;AAEdG,EAAAA,OAAO,EAAE,WAFK;AAGdF,EAAAA,IAAI,EAAE;AACFD,IAAAA,EAAE,EAAE,CADF;AAEFE,IAAAA,QAAQ,EAAE;AAFR,GAHQ;AAOdE,EAAAA,MAAM,EAAE,EAPM;AAQdE,EAAAA,QAAQ,EAAE;AARI,CAAlB,C,CAWA;;AACA,OAAO,IAAMS,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B,C,CAEP;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AAAA,SAAW;AAC9BC,IAAAA,IAAI,EAAER,gBADwB;AAE9BO,IAAAA,IAAI,EAAJA;AAF8B,GAAX;AAAA,CAAhB;;AAMP,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzB3B,YAAyB;AAAA,MAAX4B,MAAW;;AAC9C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAKR,gBAAL;AACA,SAAKC,gBAAL;AACI,6CACOS,KADP;AAEI1B,QAAAA,SAAS,GAAGe,SAAH,4BAAiBW,KAAK,CAAC1B,SAAvB,EAFb,CAE+C;;AAF/C;;AAIJ,SAAKkB,gBAAL;AACA;AACI,aAAOQ,KAAP;AATR;AAWH,CAZD;;AAcA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n    mainPosts: [\n        {\n            id: 1,\n\n            User: { id: 1, nickname: '해돋이', },\n\n            content: '안녕하세요 트위터 짝퉁 궁금해서 가입해봤습니다~  #해시태그 #익스프레스',\n\n            Images: [\n                { src: 'https://bit.ly/34S7zRp' },\n                { src: 'https://bit.ly/3uX6IJH' },\n                { src: 'https://bit.ly/2TDFv1w' },\n            ],\n\n            Comments: [\n                { User: { nickname: '재원' }, content: '키보드 윤활해야지~' },\n                { User: { nickname: '선범' }, content: '여친이랑 산에 가야지~' }\n            ],\n        }\n    ],\n    imagePaths: [], // 이미지 업로드시 경로 저장\n    \n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    \n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null,\n}\n//-------------------------------------------- ADD_POST에 사용될 더미데이터\nconst dummyPost = {\n    id: 1,\n    content: '더미데이터입니다.',\n    User: {\n        id: 1,\n        nickname: '해돋이'\n    },\n    Images: [],\n    Comments: [],\n}\n\n//-------------------------------------------- 액션\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\n//--------------------------------------------\nexport const addPost = (data) => ({\n    type: ADD_POST_REQUEST,\n    data\n});\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST_REQUEST:\n        case ADD_POST_SUCCESS:\n            return {\n                ...state,\n                mainPosts: [dummyPost, ...state.mainPosts],// 가장 위로 올라오도록\n            }\n        case ADD_POST_FAILURE:\n        default:\n            return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}