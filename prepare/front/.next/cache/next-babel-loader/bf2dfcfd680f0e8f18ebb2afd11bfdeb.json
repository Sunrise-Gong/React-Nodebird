{"ast":null,"code":"var __jsx = React.createElement;\n// post/[id].js -> 특정 게시글 하나만 나타내는 페이지 (링크 타고 들어오거나 할 경우)\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { useSelector } from 'react-redux';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\n\nvar Post = function Post() {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost.content\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"https://nodebird.com/post/\".concat(id)\n  })), __jsx(PostCard, {\n    post: singlePost\n  }));\n};\n\nexport var __N_SSP = true;\nexport default Post;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/pages/post/[id].js"],"names":["React","useRouter","Head","useSelector","AppLayout","PostCard","Post","router","id","query","state","post","singlePost","User","nickname","content","Images","src"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAOC,IAAP,MAAiB,WAAjB;AAKA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,MAAQO,EAAR,GAAeD,MAAM,CAACE,KAAtB,CAAQD,EAAR;;AACA,qBAAuBL,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAlC;AAAA,MAAQC,UAAR,gBAAQA,UAAR;;AAEA,SACI,MAAC,SAAD,QACI,MAAC,IAAD,QACI,qBAAQA,UAAU,CAACC,IAAX,CAAgBC,QAAxB,wBADJ,EAEI;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAEF,UAAU,CAACG;AAA7C,IAFJ,EAGI;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,YAAKH,UAAU,CAACC,IAAX,CAAgBC,QAArB;AAAjC,IAHJ,EAII;AAAM,IAAA,QAAQ,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAEF,UAAU,CAACG;AAApD,IAJJ,EAKI;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAEH,UAAU,CAACI,MAAX,CAAkB,CAAlB,IAAuBJ,UAAU,CAACI,MAAX,CAAkB,CAAlB,EAAqBC,GAA5C,GAAkD;AAArF,IALJ,EAMI;AAAM,IAAA,QAAQ,EAAC,QAAf;AAAwB,IAAA,OAAO,sCAA+BT,EAA/B;AAA/B,IANJ,CADJ,EASI,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEI;AAAhB,IATJ,CADJ;AAaH,CAlBD;;;AAsCA,eAAeN,IAAf","sourcesContent":["// post/[id].js -> 특정 게시글 하나만 나타내는 페이지 (링크 타고 들어오거나 할 경우)\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport Head from 'next/head';\n\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport { useSelector } from 'react-redux';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/PostCard';\n\nconst Post = () => {\n    const router = useRouter();\n    const { id } = router.query;\n    const { singlePost } = useSelector((state) => state.post);\n    \n    return (\n        <AppLayout>\n            <Head>\n                <title>{singlePost.User.nickname}님의 글</title>\n                <meta name=\"description\" content={singlePost.content} />\n                <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\n                <meta property=\"og:description\" content={singlePost.content} />\n                <meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'} />\n                <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\n            </Head>\n            <PostCard post={singlePost} />\n        </AppLayout>\n    );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    console.log('getServerSideProps 시작');\n    console.log('헤더', context.req.headers);\n    \n    const cookie = context.req ? context.req.headers.cookie : '';\n    \n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) { axios.defaults.headers.Cookie = cookie; }\n\n    context.store.dispatch({ type: LOAD_MY_INFO_REQUEST });\n    context.store.dispatch({ type: LOAD_POST_REQUEST, data: context.params.id });    \n\n    context.store.dispatch(END);\n    console.log('getServerSideProps 끝');\n    \n    await context.store.sagaTask.toPromise();\n});\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}