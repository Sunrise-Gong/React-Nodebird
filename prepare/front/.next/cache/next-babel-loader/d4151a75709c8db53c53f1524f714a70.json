{"ast":null,"code":"var _jsxFileName = \"/Users/haedod-i/Desktop/React-Nodebird/prepare/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react'; //<-이거 안쓰면 eslint:recommended 설정에 걸림\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    }; // 이거 안하면 메모리에 쌓임\n  }, []);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 20\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 39\n    }\n  })), \";\");\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/pages/index.js"],"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","me","state","user","mainPosts","post","map","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAA0C;;AAC1C,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAAEQ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH;AAAR,KAAD,CAAR;AAAyC,GAAlD,EAAoD,EAApD,CAAT;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASU,QAAT,GAAoB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CACIC,MAAM,CAACC,OADX,EAEIC,QAAQ,CAACC,eAAT,CAAyBC,YAF7B,EAGIF,QAAQ,CAACC,eAAT,CAAyBE,YAH7B;AAKH;;AACDL,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCT,QAAlC;AACA,WAAO,MAAM;AAAEG,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCV,QAArC;AAAiD,KAAhE,CATY,CASsD;AACrE,GAVQ,EAUN,EAVM,CAAT;AAYA,QAAM;AAAEW,IAAAA;AAAF,MAASnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBtB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAjC;AAEA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,EAAE,IAAI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEMG,SAAS,CAACE,GAAV,CAAeD,IAAD,IAAU,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACE,EAApB;AAAwB,IAAA,IAAI,EAAEF,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAFN,MADJ;AAMH,CA1BD;;AA4BA,eAAelB,IAAf","sourcesContent":["import React, { useEffect } from 'react'; //<-이거 안쓰면 eslint:recommended 설정에 걸림\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    \n    useEffect(() => { dispatch({ type: LOAD_POSTS_REQUEST }); }, []);\n\n    useEffect(() => {\n        function onScroll() {\n            console.log(\n                window.scrollY,\n                document.documentElement.clientHeight,\n                document.documentElement.scrollHeight,\n            );\n        }\n        window.addEventListener('scroll', onScroll);\n        return () => { window.removeEventListener('scroll', onScroll); }; // 이거 안하면 메모리에 쌓임\n    }, []);\n\n    const { me } = useSelector((state) => state.user);\n    const { mainPosts } = useSelector((state) => state.post);\n\n    return (\n        <AppLayout>\n            {me && <PostForm />}\n            { mainPosts.map((post) => <PostCard key={post.id} post={post} />)};\n        </AppLayout>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}