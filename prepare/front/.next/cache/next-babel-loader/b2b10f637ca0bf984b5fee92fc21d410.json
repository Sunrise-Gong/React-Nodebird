{"ast":null,"code":"var __jsx = React.createElement;\n// hashtag/[tag].js \nimport { useRouter } from 'next/router';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\n\nvar Hashtag = function Hashtag() {\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var tag = router.query.tag;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  useEffect(function () {\n    // 인피니티 스크롤\n    var onScroll = function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id,\n            data: tag\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\n  return __jsx(AppLayout, null, mainPosts.map(function (post) {\n    return __jsx(PostCard, {\n      key: post.id,\n      post: post\n    });\n  }));\n};\n\nexport var __N_SSP = true;\nexport default Hashtag;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/pages/hashtag/[tag].js"],"names":["useRouter","React","useEffect","useDispatch","useSelector","AppLayout","LOAD_HASHTAG_POSTS_REQUEST","PostCard","Hashtag","dispatch","router","tag","query","state","post","mainPosts","hasMorePosts","loadPostsLoading","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map"],"mappings":";AAAA;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAIA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,0BAAT,QAA2C,qBAA3C;AAEA,OAAOC,QAAP,MAAqB,2BAArB;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,MAAM,GAAGV,SAAS,EAAxB;AACA,MAAQW,GAAR,GAAgBD,MAAM,CAACE,KAAvB,CAAQD,GAAR;;AACA,qBAAsDP,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAAjE;AAAA,MAAQC,SAAR,gBAAQA,SAAR;AAAA,MAAmBC,YAAnB,gBAAmBA,YAAnB;AAAA,MAAiCC,gBAAjC,gBAAiCA,gBAAjC;;AAEAf,EAAAA,SAAS,CAAC,YAAM;AAAE;AACd,QAAMgB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,UAAIC,MAAM,CAACC,WAAP,GACEC,QAAQ,CAACC,eAAT,CAAyBC,YAD3B,GAEEF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF9C,EAEmD;AAC/C,YAAIR,YAAY,IAAI,CAACC,gBAArB,EAAuC;AAAA;;AACnCR,UAAAA,QAAQ,CAAC;AACLgB,YAAAA,IAAI,EAAEnB,0BADD;AAC6BoB,YAAAA,MAAM,gBAAEX,SAAS,CAACA,SAAS,CAACY,MAAV,GAAmB,CAApB,CAAX,+CAAE,WAAiCC,EADtE;AAC0EC,YAAAA,IAAI,EAAElB;AADhF,WAAD,CAAR;AAGH;AACJ;AACJ,KAVD;;AAYAQ,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AAEA,WAAO,YAAM;AAAEC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AAAiD,KAAhE;AACH,GAhBQ,EAgBN,CAACH,SAAS,CAACY,MAAX,EAAmBX,YAAnB,EAAiCL,GAAjC,EAAsCM,gBAAtC,CAhBM,CAAT;AAkBA,SACI,MAAC,SAAD,QACKF,SAAS,CAACiB,GAAV,CAAc,UAAClB,IAAD;AAAA,WAAU,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACc,EAApB;AAAwB,MAAA,IAAI,EAAEd;AAA9B,MAAV;AAAA,GAAd,CADL,CADJ;AAKH,CA7BD;;;AA6CA,eAAeN,OAAf","sourcesContent":["// hashtag/[tag].js \nimport { useRouter } from 'next/router';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\n\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport axios from 'axios';\n\nconst Hashtag = () => {\n    const dispatch = useDispatch();\n    const router = useRouter();\n    const { tag } = router.query;\n    const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\n\n    useEffect(() => { // 인피니티 스크롤\n        const onScroll = () => {\n            if (window.pageYOffset\n                + document.documentElement.clientHeight\n                > document.documentElement.scrollHeight - 300) {\n                if (hasMorePosts && !loadPostsLoading) {\n                    dispatch({\n                        type: LOAD_HASHTAG_POSTS_REQUEST, lastId: mainPosts[mainPosts.length - 1]?.id, data: tag,\n                    });\n                }\n            }\n        };\n\n        window.addEventListener('scroll', onScroll);\n\n        return () => { window.removeEventListener('scroll', onScroll); };\n    }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\n\n    return (\n        <AppLayout>\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\n        </AppLayout>\n    );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    console.log('context 쿠키생성전', context);\n    const cookie = context.req ? context.req.headers.cookie : '';\n    console.log('context 쿠키생성후', context);\n    axios.defaults.headers.Cookie = '';\n    \n    if (context.req && cookie) { axios.defaults.headers.Cookie = cookie; }\n\n    context.store.dispatch({ type: LOAD_HASHTAG_POSTS_REQUEST, data: context.params.tag });\n    context.store.dispatch({ type: LOAD_MY_INFO_REQUEST });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n});\n\nexport default Hashtag;"]},"metadata":{},"sourceType":"module"}