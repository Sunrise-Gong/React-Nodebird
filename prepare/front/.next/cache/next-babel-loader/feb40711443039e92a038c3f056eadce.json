{"ast":null,"code":"import produce from 'immer'; // import shortid from 'shortid';\n\nexport const initialState = {\n  //------------------------ 팔로우\n  followLoading: false,\n  followDone: false,\n  followError: null,\n  //------------------------ 언팔로우\n  unfollowLoading: false,\n  unfollowDone: false,\n  unfollowError: null,\n  //------------------------ 로그인\n  logInLoading: false,\n  logInDone: false,\n  logInError: null,\n  //------------------------ 로그아웃\n  logOutLoading: false,\n  logOutDone: false,\n  logOutError: null,\n  //------------------------ 회원가입\n  signUpLoading: false,\n  signUpDone: false,\n  signUpError: null,\n  //------------------------ 닉네임 변경\n  changeNicknameLoading: false,\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  logOutData: {}\n}; // const dummyUser = (data) => ({\n//     ...data,\n//     nickname: '해돋이',\n//     id: 1,\n//     Posts: [{ id: 1 }],\n//     Followings: [{ id: shortid.generate(), nickname: '재원이' }, { id: shortid.generate(), nickname: '선범이' }, { id: shortid.generate(), nickname: '나연' }],\n//     Followers: [{ id: shortid.generate(), nickname: '재원이' }, { id: shortid.generate(), nickname: '선범이' }, { id: shortid.generate(), nickname: '나연' }],\n// });\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      //-------------------------------------- FOLLOW\n      case FOLLOW_REQUEST:\n        draft.followLoading = true;\n        draft.followError = null;\n        draft.followDone = false;\n        break;\n\n      case FOLLOW_SUCCESS:\n        draft.followLoading = false;\n        draft.followDone = true;\n        draft.me.Followings.unshift({\n          id: action.data\n        });\n        break;\n\n      case FOLLOW_FAILURE:\n        draft.followLoading = false;\n        draft.followError = action.error;\n        break;\n      //-------------------------------------- UNFOLLOW\n\n      case UNFOLLOW_REQUEST:\n        draft.logInLoading = true;\n        draft.logInError = null;\n        draft.logInDone = false;\n        break;\n\n      case UNFOLLOW_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me.Followings = draft.me.Followings.filter(v => v.id !== action.data);\n        break;\n\n      case UNFOLLOW_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n      //-------------------------------------- LOG_IN\n\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true;\n        draft.logInError = null;\n        draft.logInDone = false;\n        break;\n\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false;\n        draft.logInDone = true;\n        draft.me = action.data;\n        break;\n\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false;\n        draft.logInError = action.error;\n        break;\n      //-------------------------------------- LOG_OUT\n\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n      //-------------------------------------- SIGN_UP\n\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n      //-------------------------------------- CHANGE_NICKNAME\n\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameError = action.error;\n        break;\n      //-------------------------------------- ADD_POST_TO_ME\n\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n\n      /* immer 사용하기전\n      return {\n          ...state\n          me: {\n              ...state.me,\n              Posts: [{ id: action.data }, ...state.me.Posts];\n          },\n      }; */\n      //-------------------------------------- REMOVE_POST_OF_ME\n\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n        break;\n\n      /* immer 사용하기 전\n      return {\n          ...state\n          me: {\n              ...state.me,\n              Posts: state.me.Posts.filter((v) => v.id !== action.data)\n          },\n      }; */\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/reducers/user.js"],"names":["produce","initialState","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","logOutData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","data","type","logoutRequestAction","reducer","state","action","draft","Followings","unshift","id","error","filter","v","Posts"],"mappings":"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","sourcesContent":["import produce from 'immer';\n// import shortid from 'shortid';\n\nexport const initialState = {\n    //------------------------ 팔로우\n    followLoading: false,\n    followDone: false,\n    followError: null,\n    //------------------------ 언팔로우\n    unfollowLoading: false,\n    unfollowDone: false,\n    unfollowError: null,\n    //------------------------ 로그인\n    logInLoading: false,\n    logInDone: false,\n    logInError: null,\n    //------------------------ 로그아웃\n    logOutLoading: false,\n    logOutDone: false,\n    logOutError: null,\n    //------------------------ 회원가입\n    signUpLoading: false,\n    signUpDone: false,\n    signUpError: null,\n    //------------------------ 닉네임 변경\n    changeNicknameLoading: false,\n    changeNicknameDone: false,\n    changeNicknameError: null,\n\n    me: null,\n    signUpData: {},\n    logOutData: {},\n};\n\n// const dummyUser = (data) => ({\n//     ...data,\n//     nickname: '해돋이',\n//     id: 1,\n//     Posts: [{ id: 1 }],\n//     Followings: [{ id: shortid.generate(), nickname: '재원이' }, { id: shortid.generate(), nickname: '선범이' }, { id: shortid.generate(), nickname: '나연' }],\n//     Followers: [{ id: shortid.generate(), nickname: '재원이' }, { id: shortid.generate(), nickname: '선범이' }, { id: shortid.generate(), nickname: '나연' }],\n// });\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\n\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\n\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nexport const loginRequestAction = (data) => {\n    return {\n        type: LOG_IN_REQUEST,\n        data,\n    };\n};\n\nexport const logoutRequestAction = () => {\n    return {\n        type: LOG_OUT_REQUEST,\n    };\n};\n\nconst reducer = (state = initialState, action) => {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            //-------------------------------------- FOLLOW\n            case FOLLOW_REQUEST:\n                draft.followLoading = true;\n                draft.followError = null;\n                draft.followDone = false;\n                break;\n            case FOLLOW_SUCCESS:\n                draft.followLoading = false;\n                draft.followDone = true;\n                draft.me.Followings.unshift({ id: action.data });\n                break;\n            case FOLLOW_FAILURE:\n                draft.followLoading = false;\n                draft.followError = action.error;\n                break;\n            //-------------------------------------- UNFOLLOW\n            case UNFOLLOW_REQUEST:\n                draft.logInLoading = true;\n                draft.logInError = null;\n                draft.logInDone = false;\n                break;\n            case UNFOLLOW_SUCCESS:\n                draft.logInLoading = false;\n                draft.logInDone = true;\n                draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data);\n                break;\n            case UNFOLLOW_FAILURE:\n                draft.logInLoading = false;\n                draft.logInError = action.error;\n                break;\n            //-------------------------------------- LOG_IN\n            case LOG_IN_REQUEST:\n                draft.logInLoading = true;\n                draft.logInError = null;\n                draft.logInDone = false;\n                break;\n            case LOG_IN_SUCCESS:\n                draft.logInLoading = false;\n                draft.logInDone = true;\n                draft.me = action.data;\n                break;\n            case LOG_IN_FAILURE:\n                draft.logInLoading = false;\n                draft.logInError = action.error;\n                break;\n            //-------------------------------------- LOG_OUT\n            case LOG_OUT_REQUEST:\n                draft.logOutLoading = true;\n                draft.logOutDone = false;\n                draft.logOutError = null;\n                break;\n            case LOG_OUT_SUCCESS:\n                draft.logOutLoading = false;\n                draft.logOutDone = true;\n                draft.me = null;\n                break;\n            case LOG_OUT_FAILURE:\n                draft.logOutLoading = false;\n                draft.logOutError = action.error;\n                break;\n            //-------------------------------------- SIGN_UP\n            case SIGN_UP_REQUEST:\n                draft.signUpLoading = true;\n                draft.signUpDone = false;\n                draft.signUpError = null;\n                break;\n            case SIGN_UP_SUCCESS:\n                draft.signUpLoading = false;\n                draft.signUpDone = true;\n                break;\n            case SIGN_UP_FAILURE:\n                draft.signUpLoading = false;\n                draft.signUpError = action.error;\n                break;\n            //-------------------------------------- CHANGE_NICKNAME\n            case CHANGE_NICKNAME_REQUEST:\n                draft.changeNicknameLoading = true;\n                draft.changeNicknameDone = false;\n                draft.changeNicknameError = null;\n                break;\n            case CHANGE_NICKNAME_SUCCESS:\n                draft.changeNicknameLoading = false;\n                draft.changeNicknameDone = true;\n                break;\n            case CHANGE_NICKNAME_FAILURE:\n                draft.changeNicknameLoading = false;\n                draft.changeNicknameError = action.error;\n                break;\n            //-------------------------------------- ADD_POST_TO_ME\n            case ADD_POST_TO_ME:\n                draft.me.Posts.unshift({ id: action.data });\n                break;\n            /* immer 사용하기전\n            return {\n                ...state\n                me: {\n                    ...state.me,\n                    Posts: [{ id: action.data }, ...state.me.Posts];\n                },\n            }; */\n            //-------------------------------------- REMOVE_POST_OF_ME\n            case REMOVE_POST_OF_ME:\n                draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\n                break;\n            /* immer 사용하기 전\n            return {\n                ...state\n                me: {\n                    ...state.me,\n                    Posts: state.me.Posts.filter((v) => v.id !== action.data)\n                },\n            }; */\n            default:\n                break;\n        }\n    });\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}