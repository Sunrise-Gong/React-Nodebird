{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput'; // 커스텀 훅\n\nimport { loginRequestAction } from '../reducers/user'; // 액션\n// import styled from 'styled-components'; // 에러가 나서 일단 보류\n// const ButtonWrapper = styled.div`\n// marginTop: 10px;\n// `;\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const {\n    logInLoading,\n    logInError\n  } = useSelector(state => state.user);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const style = useMemo(() => ({\n    marginTop: 10\n  }), []);\n  useEffect(() => {\n    if (logInError) {\n      return alert(logInError);\n    }\n  }, [logInError]);\n  const onSubmitForm = useCallback(() => {\n    console.log(email, password);\n    dispatch(loginRequestAction({\n      email,\n      password\n    }));\n  }, [email, password]);\n  return __jsx(Form, {\n    style: {\n      padding: 10\n    },\n    onFinish: onSubmitForm\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-email\"\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-email\",\n    type: \"email\",\n    value: email,\n    onChange: onChangeEmail,\n    required: true\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true\n  })), __jsx(\"div\", {\n    style: style\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: logInLoading\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\"\n  }, __jsx(\"a\", null, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/components/LoginForm.js"],"names":["React","useCallback","useEffect","useMemo","Form","Input","Button","Link","useDispatch","useSelector","useInput","loginRequestAction","LoginForm","dispatch","logInLoading","logInError","state","user","email","onChangeEmail","password","onChangePassword","style","marginTop","alert","onSubmitForm","console","log","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,OAAxC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,mBAArB,C,CAA0C;;AAC1C,SAASC,kBAAT,QAAmC,kBAAnC,C,CAAuD;AAEvD;AAEA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+BN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAhD;AACA,QAAM,CAACC,KAAD,EAAQC,aAAR,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACU,QAAD,EAAWC,gBAAX,IAA+BX,QAAQ,CAAC,EAAD,CAA7C;AAEA,QAAMY,KAAK,GAAGnB,OAAO,CAAC,OAAO;AAAEoB,IAAAA,SAAS,EAAE;AAAb,GAAP,CAAD,EAA4B,EAA5B,CAArB;AAEArB,EAAAA,SAAS,CAAC,MAAM;AAAE,QAAIa,UAAJ,EAAgB;AAAE,aAAOS,KAAK,CAACT,UAAD,CAAZ;AAA2B;AAAE,GAAxD,EAA0D,CAACA,UAAD,CAA1D,CAAT;AAEA,QAAMU,YAAY,GAAGxB,WAAW,CAAC,MAAM;AACnCyB,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ,EAAmBE,QAAnB;AACAP,IAAAA,QAAQ,CAACF,kBAAkB,CAAC;AAAEO,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAD,CAAnB,CAAR;AACH,GAH+B,EAG7B,CAACF,KAAD,EAAQE,QAAR,CAH6B,CAAhC;AAKA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEQ,MAAAA,OAAO,EAAE;AAAX,KAAb;AAA8B,IAAA,QAAQ,EAAEH;AAAxC,KACI,mBACI;AAAO,IAAA,OAAO,EAAC;AAAf,0BADJ,EAEI,iBAFJ,EAGI,MAAC,KAAD;AACA,IAAA,IAAI,EAAC,YADL;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,KAAK,EAAEP,KAHP;AAIA,IAAA,QAAQ,EAAEC,aAJV;AAKA,IAAA,QAAQ;AALR,IAHJ,CADJ,EAWI,mBACA;AAAO,IAAA,OAAO,EAAC;AAAf,gCADA,EAEI,iBAFJ,EAGI,MAAC,KAAD;AACA,IAAA,IAAI,EAAC,eADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,KAAK,EAAEC,QAHP;AAIA,IAAA,QAAQ,EAAEC,gBAJV;AAKA,IAAA,QAAQ;AALR,IAHJ,CAXJ,EAqBI;AAAK,IAAA,KAAK,EAAEC;AAAZ,KACI,MAAC,MAAD;AACA,IAAA,IAAI,EAAC,SADL;AAEA,IAAA,QAAQ,EAAC,QAFT;AAGA,IAAA,OAAO,EAAER;AAHT,0BADJ,EAMI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KAAqB,4CAArB,CANJ,CArBJ,CADJ;AAgCH,CA/CD;;AAiDA,eAAeF,SAAf","sourcesContent":["import React, { useCallback, useEffect, useMemo } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport useInput from '../hooks/useInput'; // 커스텀 훅\nimport { loginRequestAction } from '../reducers/user'; // 액션\n\n// import styled from 'styled-components'; // 에러가 나서 일단 보류\n\n// const ButtonWrapper = styled.div`\n// marginTop: 10px;\n// `;\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n    const { logInLoading, logInError } = useSelector((state) => state.user);\n    const [email, onChangeEmail] = useInput('');\n    const [password, onChangePassword] = useInput('');\n\n    const style = useMemo(() => ({ marginTop: 10 }), []);\n    \n    useEffect(() => { if (logInError) { return alert(logInError); } }, [logInError]);\n\n    const onSubmitForm = useCallback(() => {\n        console.log(email, password);\n        dispatch(loginRequestAction({ email, password }));\n    }, [email, password]);\n    \n    return (\n        <Form style={{ padding: 10 }} onFinish={onSubmitForm}>\n            <div>\n                <label htmlFor=\"user-email\">이메일</label>\n                <br />\n                <Input \n                name=\"user-email\" \n                type=\"email\"\n                value={email} \n                onChange={onChangeEmail} \n                required />\n            </div>\n            <div>\n            <label htmlFor=\"user-password\">비밀번호</label>\n                <br />\n                <Input \n                name=\"user-password\" \n                type=\"password\" \n                value={password} \n                onChange={onChangePassword} \n                required />\n            </div>\n            <div style={style}>\n                <Button \n                type=\"primary\" \n                htmlType=\"submit\" \n                loading={logInLoading}>로그인\n                </Button>\n                <Link href=\"/signup\"><a>회원가입</a></Link>\n            </div>\n        </Form>\n    );\n};\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}