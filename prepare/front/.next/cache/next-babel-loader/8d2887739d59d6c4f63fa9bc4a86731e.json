{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/haedod-i/Desktop/React-Nodebird/prepare/front/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useinput';\nimport { useSelector } from 'react-redux';\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\n_s(CommentForm, \"PptqMkMnW7reCXQEE7qotaIWwp0=\", false, function () {\n  return [useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/components/CommentForm.js"],"names":["React","useCallback","Button","Form","Input","PropTypes","useInput","useSelector","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","onSubmitComment","console","log","position","margin","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAE9B,MAAMC,EAAE,GAAGH,WAAW,CAAC,UAACI,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AACA,kBAA2CJ,QAAQ,CAAC,EAAD,CAAnD;AAAA;AAAA,MAAOQ,WAAP;AAAA,MAAoBC,mBAApB;;AAEA,MAAMC,eAAe,GAAGf,WAAW,CAAC,YAAM;AACtCgB,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACH,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAIA,SACI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE;AAAhC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,KAAD,CAAO,QAAP;AACI,IAAA,KAAK,EAAEN,WADX;AAEI,IAAA,QAAQ,EAAEC,mBAFd;AAGI,IAAA,IAAI,EAAE,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOI,MAAC,MAAD;AAAS,IAAA,IAAI,EAAC,SAAd;AAAwB,IAAA,QAAQ,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,CAFJ,CADJ;AAgBH,CAzBD;;GAAMP,W;UAESD,W,EACgCD,Q;;;KAHzCE,W;AA2BNA,WAAW,CAACa,SAAZ,GAAwB;AACpBZ,EAAAA,IAAI,EAAEJ,SAAS,CAACiB,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAef,WAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport useInput from '../hooks/useinput';\nimport { useSelector } from 'react-redux';\n\nconst CommentForm = ({ post }) => {\n\n    const id = useSelector((state) => state.user.me?.id);\n    const [commentText, onChangeCommentText] = useInput('');\n\n    const onSubmitComment = useCallback(() => { \n        console.log(post.id, commentText);\n    }, [commentText]);\n\n    return (\n        <Form onFinish={onSubmitComment}>\n\n            <Form.Item style={{ position: 'relative', margin: 0 }}>\n\n                <Input.TextArea\n                    value={commentText}\n                    onChange={onChangeCommentText}\n                    rows={4} />\n\n                <Button  type=\"primary\" htmlType=\"submit\">삐약</Button>\n\n            </Form.Item>\n\n        </Form>\n    )\n};\n\nCommentForm.propTypes = {\n    post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}