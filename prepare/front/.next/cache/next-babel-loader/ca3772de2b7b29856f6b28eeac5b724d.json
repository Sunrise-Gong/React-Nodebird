{"ast":null,"code":"import { all, fork, delay, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST } from '../reducers/user'; //-------------------------------------------------- LOG_IN\n// function logInAPI(data) {\n//     return axios.post('/api/login', data);\n// }\n\nfunction* logIn(action) {\n  try {\n    //const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n} //-------------------------------------------------- LOG_OUT\n// function logOutAPI() {\n//     return axios.post('/api/logout');\n// }\n\n\nfunction* logOut() {\n  try {\n    //const result = yield call(logOutAPI)\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n} //-------------------------------------------------- SIGN_UP\n\n\nfunction signUpAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* signUp() {\n  try {\n    const result = yield call(signUpAPI); // yield delay(1000);\n\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n} //-------------------------------------------------- FOLLOW\n// function followAPI() {\n//     return axios.post('/api/follow');\n// }\n\n\nfunction* follow(action) {\n  try {\n    //const result = yield call(followAPI)\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n} //-------------------------------------------------- UNFOLLOW\n// function unfollowAPI() {\n//     return axios.post('/api/unfollow');\n// }\n\n\nfunction* unfollow(action) {\n  try {\n    //const result = yield call(unfollowAPI)\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data // 현 게시글 작성자 아이디\n\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n} //-------------------------------------------------- userSaga\n\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/sagas/user.js"],"names":["all","fork","delay","put","takeLatest","call","axios","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","logIn","action","type","data","err","error","response","watchLogIn","logOut","watchLogOut","signUpAPI","post","signUp","result","watchSignUp","follow","watchFollow","unfollow","watchUnfollow","userSaga"],"mappings":"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","sourcesContent":["import { all, fork, delay, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { \n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, \n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, \n    UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST,\n} from '../reducers/user';\n\n//-------------------------------------------------- LOG_IN\n// function logInAPI(data) {\n//     return axios.post('/api/login', data);\n// }\nfunction* logIn(action) {\n    try {\n        //const result = yield call(logInAPI, action.data);\n        yield delay(1000);\n\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: action.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOG_IN_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLogIn() {\n    yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\n//-------------------------------------------------- LOG_OUT\n// function logOutAPI() {\n//     return axios.post('/api/logout');\n// }\nfunction* logOut() {\n    try {\n        //const result = yield call(logOutAPI)\n        yield delay(1000);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch (err) {\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchLogOut() {\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\n//-------------------------------------------------- SIGN_UP\nfunction signUpAPI() {\n    return axios.post('/api/logout');\n}\nfunction* signUp() {\n    try {\n        const result = yield call(signUpAPI);\n        // yield delay(1000);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch (err) {\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchSignUp() {\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\n//-------------------------------------------------- FOLLOW\n// function followAPI() {\n//     return axios.post('/api/follow');\n// }\nfunction* follow(action) {\n    try {\n        //const result = yield call(followAPI)\n        yield delay(1000);\n        yield put({\n            type: FOLLOW_SUCCESS,\n            data: action.data,\n        });\n    } catch (err) {\n        yield put({\n            type: FOLLOW_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchFollow() {\n    yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\n//-------------------------------------------------- UNFOLLOW\n// function unfollowAPI() {\n//     return axios.post('/api/unfollow');\n// }\nfunction* unfollow(action) {\n    try {\n        //const result = yield call(unfollowAPI)\n        yield delay(1000);\n        yield put({\n            type: UNFOLLOW_SUCCESS,\n            data: action.data, // 현 게시글 작성자 아이디\n        });\n    } catch (err) {\n        yield put({\n            type: UNFOLLOW_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchUnfollow() {\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\n//-------------------------------------------------- userSaga\nexport default function* userSaga() {\n    yield all([\n        fork(watchLogIn),\n        fork(watchLogOut),\n        fork(watchSignUp),\n        fork(watchFollow),\n        fork(watchUnfollow),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}