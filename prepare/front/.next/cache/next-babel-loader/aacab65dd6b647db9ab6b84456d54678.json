{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_POST_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from '../reducers/post'; //액션\n\nimport useInput from '../hooks/useInput';\n\nvar PostForm = function PostForm() {\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2]; //------------------------------------------------ 작성한 글이 업로드 성공시 인풋창 비우기\n\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]); //------------------------------------------------ 이미지 업로드 버튼 클릭\n\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]); //------------------------------------------------ 이미지 업로드 \n\n  var onChangeImages = useCallback(function (e) {\n    console.log('images', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    }); // e.target.files 가 유사 배열이여서 call 을 사용함\n\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  }); //------------------------------------------------ 게시글/이미지 등록버튼 클릭\n\n  var onSubmit = useCallback(function () {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성해주세요.');\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (p) {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20 px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n  }), __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages\n    /* 이미지 선택후 확인을 누르면 실행됨 */\n\n  }), __jsx(Button, {\n    onClick: onClickImageUpload\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\"\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", null, imagePaths.map(function (v, i) {\n    return (// 이미지 업로드 미리보기 부분\n      __jsx(\"div\", {\n        key: v,\n        style: {\n          display: 'inline-block'\n        }\n      }, __jsx(\"img\", {\n        src: \"http://localhost:3065/\".concat(v),\n        style: {\n          width: '200px'\n        },\n        alt: v\n      }), __jsx(\"div\", null, __jsx(Button, {\n        onClick: onRemoveImage(i)\n      }, \"\\uC81C\\uAC70\")))\n    );\n  })));\n};\n\nexport default PostForm;","map":null,"metadata":{},"sourceType":"module"}