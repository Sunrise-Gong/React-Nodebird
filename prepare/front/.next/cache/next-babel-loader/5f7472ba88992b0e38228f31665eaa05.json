{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from 'react';\nimport AppLayout from '../components/AppLayout';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport useInput from '../hooks/useInput';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nimport { useDispatch, useSelector } from 'react-redux';\n\nvar Signup = function Signup() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      signUpLoading = _useSelector.signUpLoading,\n      signUpDone = _useSelector.signUpDone,\n      signUpError = _useSelector.signUpError,\n      me = _useSelector.me; // Router.replace는 Router.push와 다르게 히스토리가 남지 않습니다.(뒤로가기 해도 이전 페이지 안나옴)\n\n\n  useEffect(function () {\n    if (me && me.id) {\n      Router.replace('/');\n    }\n  }, [me && me.id]); // 로그인시 메인페이지로\n\n  useEffect(function () {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]); // 회원가입 완료시 메인페이지로\n\n  useEffect(function () {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]); // 회원가입 실패시 alert 창 \n  //---------------------------------------- 커스텀 훅\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nickname = _useInput4[0],\n      onChangeNickname = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1]; //---------------------------------------- 패스워드 유효성 검사\n\n\n  var _useState = useState(''),\n      passwordCheck = _useState[0],\n      setPasswordCheck = _useState[1];\n\n  var _useState2 = useState(false),\n      passwordError = _useState2[0],\n      setPasswordError = _useState2[1];\n\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]); //---------------------------------------- 동의 체크박스 검사\n\n  var _useState3 = useState(''),\n      term = _useState3[0],\n      setTerm = _useState3[1];\n\n  var _useState4 = useState(false),\n      termError = _useState4[0],\n      setTermError = _useState4[1];\n\n  var onChangeTerm = useCallback(function (e) {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []); //---------------------------------------- 회원가입 버튼 클릭시\n\n  var onSubmit = useCallback(function () {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    } // 패스워드 재확인\n\n\n    if (!term) {\n      return setTermError(true);\n    } // 동의 체크박스 \n\n\n    console.log(email, password, nickname);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email: email,\n        password: password,\n        nickname: nickname\n      }\n    });\n  }, [email, password, passwordCheck, term]); //----------------------------------------\n\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, \"\\uD68C\\uC6D0\\uAC00\\uC785 | NodeBird\")), __jsx(Form, {\n    onFinish: onSubmit\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-email\"\n  }, \"\\uC774\\uBA54\\uC77C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    onChange: onChangeEmail\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \" \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4. \")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"\\uD574\\uB3CB\\uC774\\uC758 \\uB178\\uC608\\uAC00 \\uB418\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"), termError && __jsx(\"div\", {\n    style: {\n      color: 'red'\n    }\n  }, \" \\uB178\\uC608\\uAC00 \\uB418\\uC154\\uC57C \\uAC00\\uC785\\uC774 \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4. \")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: signUpLoading\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))));\n};\n\nexport var __N_SSP = true;\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}