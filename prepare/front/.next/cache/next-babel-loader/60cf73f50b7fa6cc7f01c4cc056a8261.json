{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { END } from 'redux-saga';\nimport { Avatar, Card } from 'antd';\nimport AppLayout from '../components/AppLayout';\nimport wrapper from '../store/configureStore';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\nconst Profile = () => {\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, \"Sunrise | NodeBird\")), userInfo ? __jsx(Card, {\n    actions: [__jsx(\"div\", {\n      key: \"twit\"\n    }, \"\\uC9F9\\uC9F9\", __jsx(\"br\", null), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\"\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", null), userInfo.Followings), __jsx(\"div\", {\n      key: \"fllower\"\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", null), userInfo.Followers)]\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, null, userInfo.nickname[0]),\n    title: userInfo.nickname,\n    description: \"\\uB178\\uB4DC\\uBC84\\uB4DC \\uB9E4\\uB2C8\\uC544\"\n  })) : null);\n};\n\nexport const getStaticProps = wrapper.getStaticProps(async context => {\n  console.log('getStaticProps 시작');\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: 5\n  });\n  context.store.dispatch(END);\n  console.log('getStaticProps 끝');\n  await context.store.sagaTask.toPromise();\n});\nexport default Profile;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/pages/about.js"],"names":["React","useSelector","Head","END","Avatar","Card","AppLayout","wrapper","LOAD_USER_REQUEST","Profile","userInfo","state","user","Posts","Followings","Followers","nickname","getStaticProps","context","console","log","store","dispatch","type","data","sagaTask","toPromise"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAeT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAhC;AACA,SACI,MAAC,SAAD,QACI,MAAC,IAAD,QACI,0CADJ,CADJ,EAIKF,QAAQ,GAED,MAAC,IAAD;AACI,IAAA,OAAO,EAAE,CACL;AAAK,MAAA,GAAG,EAAC;AAAT,uBAAkB,iBAAlB,EAAyBA,QAAQ,CAACG,KAAlC,CADK,EAEL;AAAK,MAAA,GAAG,EAAC;AAAT,6BAAwB,iBAAxB,EAA+BH,QAAQ,CAACI,UAAxC,CAFK,EAGL;AAAK,MAAA,GAAG,EAAC;AAAT,6BAAsB,iBAAtB,EAA6BJ,QAAQ,CAACK,SAAtC,CAHK;AADb,KAOI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,MAAM,EAAE,MAAC,MAAD,QAASL,QAAQ,CAACM,QAAT,CAAkB,CAAlB,CAAT,CADZ;AAEI,IAAA,KAAK,EAAEN,QAAQ,CAACM,QAFpB;AAGI,IAAA,WAAW,EAAC;AAHhB,IAPJ,CAFC,GAgBH,IApBV,CADJ;AAwBH,CA1BD;;AA4BA,OAAO,MAAMC,cAAc,GAAGV,OAAO,CAACU,cAAR,CAAuB,MAAOC,OAAP,IAAmB;AACpEC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEAF,EAAAA,OAAO,CAACG,KAAR,CAAcC,QAAd,CAAuB;AAAEC,IAAAA,IAAI,EAAEf,iBAAR;AAA2BgB,IAAAA,IAAI,EAAE;AAAjC,GAAvB;AAEAN,EAAAA,OAAO,CAACG,KAAR,CAAcC,QAAd,CAAuBnB,GAAvB;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,QAAMF,OAAO,CAACG,KAAR,CAAcI,QAAd,CAAuBC,SAAvB,EAAN;AACH,CAR6B,CAAvB;AAUP,eAAejB,OAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { END } from 'redux-saga';\n\nimport { Avatar, Card } from 'antd';\nimport AppLayout from '../components/AppLayout';\nimport wrapper from '../store/configureStore';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\n\nconst Profile = () => {\n    const { userInfo } = useSelector((state) => state.user);\n    return (\n        <AppLayout>\n            <Head>\n                <title>Sunrise | NodeBird</title>\n            </Head>\n            {userInfo\n                ? (\n                    <Card\n                        actions={[\n                            <div key=\"twit\">짹짹<br />{userInfo.Posts}</div>,\n                            <div key=\"following\">팔로잉<br />{userInfo.Followings}</div>,\n                            <div key=\"fllower\">팔로워<br />{userInfo.Followers}</div>,\n                        ]}\n                    >\n                        <Card.Meta\n                            avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\n                            title={userInfo.nickname}\n                            description=\"노드버드 매니아\"\n                        />\n                    </Card>\n                )\n                : null}\n        </AppLayout>\n    );\n};\n\nexport const getStaticProps = wrapper.getStaticProps(async (context) => {\n    console.log('getStaticProps 시작');\n    \n    context.store.dispatch({ type: LOAD_USER_REQUEST, data: 5 });\n    \n    context.store.dispatch(END);\n    console.log('getStaticProps 끝');\n    await context.store.sagaTask.toPromise();\n});\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}