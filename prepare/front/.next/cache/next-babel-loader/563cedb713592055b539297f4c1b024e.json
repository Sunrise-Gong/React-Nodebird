{"ast":null,"code":"var _jsxFileName = \"/Users/haedod-i/Desktop/React-Nodebird/prepare/front/pages/hashtag/[tag].js\";\nvar __jsx = React.createElement;\n// hashtag/[tag].js \nimport { useRouter } from 'next/router';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport axios from 'axios';\n\nconst Hashtag = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    tag\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    // 인피니티 스크롤\n    const onScroll = () => {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          var _mainPosts;\n\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id,\n            data: tag\n          });\n        }\n      }\n    };\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 38\n    }\n  })));\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log('context 쿠키생성전', context);\n  const cookie = context.req ? context.req.headers.cookie : '';\n  console.log('context 쿠키생성후', context);\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: context.params.tag\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Hashtag;","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/pages/hashtag/[tag].js"],"names":["useRouter","React","useEffect","useDispatch","useSelector","END","wrapper","AppLayout","LOAD_HASHTAG_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","PostCard","axios","Hashtag","dispatch","router","tag","query","mainPosts","hasMorePosts","loadPostsLoading","state","post","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","getServerSideProps","context","console","log","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise"],"mappings":"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","sourcesContent":["// hashtag/[tag].js \nimport { useRouter } from 'next/router';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\n\nimport wrapper from '../../store/configureStore';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport PostCard from '../../components/PostCard';\nimport axios from 'axios';\n\nconst Hashtag = () => {\n    const dispatch = useDispatch();\n    const router = useRouter();\n    const { tag } = router.query;\n    const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\n\n    useEffect(() => { // 인피니티 스크롤\n        const onScroll = () => {\n            if (window.pageYOffset\n                + document.documentElement.clientHeight\n                > document.documentElement.scrollHeight - 300) {\n                if (hasMorePosts && !loadPostsLoading) {\n                    dispatch({\n                        type: LOAD_HASHTAG_POSTS_REQUEST, lastId: mainPosts[mainPosts.length - 1]?.id, data: tag,\n                    });\n                }\n            }\n        };\n\n        window.addEventListener('scroll', onScroll);\n\n        return () => { window.removeEventListener('scroll', onScroll); };\n    }, [mainPosts.length, hasMorePosts, tag, loadPostsLoading]);\n\n    return (\n        <AppLayout>\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\n        </AppLayout>\n    );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n    console.log('context 쿠키생성전', context);\n    const cookie = context.req ? context.req.headers.cookie : '';\n    console.log('context 쿠키생성후', context);\n    axios.defaults.headers.Cookie = '';\n    \n    if (context.req && cookie) { axios.defaults.headers.Cookie = cookie; }\n\n    context.store.dispatch({ type: LOAD_HASHTAG_POSTS_REQUEST, data: context.params.tag });\n    context.store.dispatch({ type: LOAD_MY_INFO_REQUEST });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n});\n\nexport default Hashtag;"]},"metadata":{},"sourceType":"module"}