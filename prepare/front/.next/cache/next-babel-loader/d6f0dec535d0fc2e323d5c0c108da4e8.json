{"ast":null,"code":"// import shortId from 'shortid';\nimport produce from 'immer'; // import faker from 'faker';\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  // 이미지 업로드시 경로 저장\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n}; //-------------------------------------------- Faker 라이브러리로 더미데이터 생성하기\n// export const generateDummyPost = (number) => Array(number).fill().map(() => ({\n//     id: shortId.generate(),\n//     User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//     },\n//     content: faker.lorem.paragraph(),\n//     Images: [{ src: faker.image.image() }],\n//     Comments: [{\n//         User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//         },\n//         content: faker.lorem.sentence(),\n//     }],\n// }));\n// initialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\n//-------------------------------------------- ADD_POST에 사용될 더미데이터\n// const dummyPost = (data) => ({\n//     id: data.id,\n//     content: data.content,\n//     User: {\n//         id: 1,\n//         nickname: '해돋이',\n//     },\n//     Images: [],\n//     Comments: [],\n// });\n//  \n//-------------------------------------------- 액션\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE'; //--------------------------------------------\n\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      //-------------------------------------- LOAD_POST\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        console.log('메인포스트 갯수', draft.mainPosts.concat(action.data).length);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      //-------------------------------------- ADD_POST\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      //-------------------------------------- REMOVE_POST\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data); // filter 메소드는 원본을 변경하지 않는 immutable한 메소드이다.\n\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      //-------------------------------------- ADD_COMMENT\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;\n/* mainPosts 더미 데이터\n{\n    id: 1,\n\n    User: { id: 1, nickname: '해돋이' },\n\n    content: '안녕하세요 트위터 짝퉁 궁금해서 가입해봤습니다~  #해시태그 #익스프레스',\n\n    Images: [\n        { id: shortId.generate(), src: 'https://bit.ly/34S7zRp' },\n        { id: shortId.generate(), src: 'https://bit.ly/3uX6IJH' },\n        { id: shortId.generate(), src: 'https://bit.ly/2TDFv1w' },\n    ],\n\n    Comments: [\n        { User: { id: shortId.generate(), nickname: '재원' }, content: '키보드 윤활해야지~' },\n        { User: { id: shortId.generate(), nickname: '선범' }, content: '여친이랑 산에 가야지~' },\n    ],\n},\n*/","map":{"version":3,"sources":["/Users/haedod-i/Desktop/React-Nodebird/prepare/front/reducers/post.js"],"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","concat","console","log","length","error","unshift","filter","v","id","post","find","PostId","Comments"],"mappings":"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","sourcesContent":["// import shortId from 'shortid';\nimport produce from 'immer';\n// import faker from 'faker';\n\nexport const initialState = {\n    mainPosts: [],\n    imagePaths: [], // 이미지 업로드시 경로 저장\n    \n    hasMorePosts: true,\n\n    likePostLoading: false,\n    likePostDone: false,\n    likePostError: null,\n    \n    unlikePostLoading: false,\n    unlikePostDone: false,\n    unlikePostError: null,\n    \n    loadPostsLoading: false,\n    loadPostsDone: false,\n    loadPostsError: null,\n    \n    addPostLoading: false,\n    addPostDone: false,\n    addPostError: null,\n    \n    removePostLoading: false,\n    removePostDone: false,\n    removePostError: null,\n    \n    addCommentLoading: false,\n    addCommentDone: false,\n    addCommentError: null, \n};\n\n//-------------------------------------------- Faker 라이브러리로 더미데이터 생성하기\n\n// export const generateDummyPost = (number) => Array(number).fill().map(() => ({\n        \n//     id: shortId.generate(),\n    \n//     User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//     },\n    \n//     content: faker.lorem.paragraph(),\n    \n//     Images: [{ src: faker.image.image() }],\n    \n//     Comments: [{\n//         User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//         },\n//         content: faker.lorem.sentence(),\n//     }],\n\n// }));\n\n// initialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\n\n//-------------------------------------------- ADD_POST에 사용될 더미데이터\n// const dummyPost = (data) => ({\n//     id: data.id,\n//     content: data.content,\n//     User: {\n//         id: 1,\n//         nickname: '해돋이',\n//     },\n//     Images: [],\n//     Comments: [],\n// });\n\n//  \n\n//-------------------------------------------- 액션\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\n//--------------------------------------------\nexport const addPost = (data) => ({\n    type: ADD_POST_REQUEST,\n    data,\n});\n\nexport const addComment = (data) => ({\n    type: ADD_COMMENT_REQUEST,\n    data,\n});\n\nconst reducer = (state = initialState, action) => {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            //-------------------------------------- LOAD_POST\n            case LOAD_POSTS_REQUEST:\n                    draft.loadPostsLoading = true;\n                    draft.loadPostsDone = false;\n                    draft.loadPostsError = null;\n                    break;\n            case LOAD_POSTS_SUCCESS:\n                    draft.loadPostsLoading = false;\n                    draft.loadPostsDone = true;\n                    draft.mainPosts = draft.mainPosts.concat(action.data);\n                    console.log('메인포스트 갯수', draft.mainPosts.concat(action.data).length);\n                    draft.hasMorePosts = draft.mainPosts.length < 50;\n                    break;\n            case LOAD_POSTS_FAILURE:\n                    draft.loadPostsLoading = false;\n                    draft.loadPostsError = action.error;\n                    break;\n            //-------------------------------------- ADD_POST\n            case ADD_POST_REQUEST:\n                    draft.addPostLoading = true;\n                    draft.addPostDone = false;\n                    draft.addPostError = null;\n                    break;\n            case ADD_POST_SUCCESS:\n                    draft.addPostLoading = false;\n                    draft.addPostDone = true;\n                    draft.mainPosts.unshift(action.data);\n                    break;\n            case ADD_POST_FAILURE:\n                    draft.addPostLoading = false;\n                    draft.addPostError = action.error;\n                    break;\n            //-------------------------------------- REMOVE_POST\n            case REMOVE_POST_REQUEST:\n                    draft.removePostLoading = true;\n                    draft.removePostDone = false;\n                    draft.removePostError = null;\n                    break;\n            case REMOVE_POST_SUCCESS:\n                    draft.removePostLoading = false;\n                    draft.removePostDone = true;\n                    draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data); // filter 메소드는 원본을 변경하지 않는 immutable한 메소드이다.\n                    break;\n            case REMOVE_POST_FAILURE:\n                    draft.removePostLoading = false;\n                    draft.removePostError = action.error;\n                    break;\n            //-------------------------------------- ADD_COMMENT\n            case ADD_COMMENT_REQUEST:\n                    draft.addCommentLoading = true;\n                    draft.addCommentDone = false;\n                    draft.addCommentError = null;\n                    break;\n            case ADD_COMMENT_SUCCESS: {\n                    const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n                    post.Comments.unshift(action.data);\n                    draft.addCommentLoading = false;\n                    draft.addCommentDone = true;\n                    break;\n            }\n            case ADD_COMMENT_FAILURE:\n                    draft.addCommentLoading = false;\n                    draft.addCommentError = action.error;\n                    break;\n            default:\n                    break;\n        }\n    });\n};\n\nexport default reducer;\n\n/* mainPosts 더미 데이터\n{\n    id: 1,\n\n    User: { id: 1, nickname: '해돋이' },\n\n    content: '안녕하세요 트위터 짝퉁 궁금해서 가입해봤습니다~  #해시태그 #익스프레스',\n\n    Images: [\n        { id: shortId.generate(), src: 'https://bit.ly/34S7zRp' },\n        { id: shortId.generate(), src: 'https://bit.ly/3uX6IJH' },\n        { id: shortId.generate(), src: 'https://bit.ly/2TDFv1w' },\n    ],\n\n    Comments: [\n        { User: { id: shortId.generate(), nickname: '재원' }, content: '키보드 윤활해야지~' },\n        { User: { id: shortId.generate(), nickname: '선범' }, content: '여친이랑 산에 가야지~' },\n    ],\n},\n*/"]},"metadata":{},"sourceType":"module"}