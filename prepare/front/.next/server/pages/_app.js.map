{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./pages/_app.js","webpack:///external \"redux-saga\"","webpack:///./reducers/index.js","webpack:///./sagas/user.js","webpack:///./sagas/post.js","webpack:///./sagas/index.js","webpack:///./store/configureStore.js","webpack:///external \"next-redux-wrapper\"","webpack:///./reducers/user.js","webpack:///external \"redux-saga/effects\"","webpack:///external \"immer\"","webpack:///external \"react\"","webpack:///./util/produce.js","webpack:///./reducers/post.js","webpack:///external \"redux\"","webpack:///external \"redux-devtools-extension\"","webpack:///external \"next/head\"","webpack:///external \"axios\""],"names":["NodeBird","Component","wrapper","withRedux","rootReducer","state","action","type","HYDRATE","console","log","payload","combinedReducer","combineReducers","user","post","removeFollowerAPI","data","axios","delete","removeFollower","result","call","put","REMOVE_FOLLOWER_SUCCESS","err","REMOVE_FOLLOWER_FAILURE","error","response","watchRemoveFollower","takeLatest","REMOVE_FOLLOWER_REQUEST","loadFollowersAPI","get","loadFollowers","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","watchLoadFollowers","LOAD_FOLLOWERS_REQUEST","loadFollowingsAPI","loadFollowings","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","watchLoadFollowings","LOAD_FOLLOWINGS_REQUEST","changeNicknameAPI","patch","nickname","changeNickname","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","watchChangeNickname","CHANGE_NICKNAME_REQUEST","loadMyInfoAPI","loadMyInfo","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_FAILURE","watchLoadMyInfo","LOAD_MY_INFO_REQUEST","loadUserAPI","loadUser","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","watchLoadUser","LOAD_USER_REQUEST","logInAPI","logIn","LOG_IN_SUCCESS","LOG_IN_FAILURE","watchLogIn","LOG_IN_REQUEST","logOutAPI","logOut","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","watchLogOut","LOG_OUT_REQUEST","signUpAPI","signUp","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","watchSignUp","SIGN_UP_REQUEST","followAPI","follow","FOLLOW_SUCCESS","FOLLOW_FAILURE","watchFollow","FOLLOW_REQUEST","unfollowAPI","unfollow","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","watchUnfollow","UNFOLLOW_REQUEST","userSaga","all","fork","retweetAPI","retweet","RETWEET_SUCCESS","RETWEET_FAILURE","watchRetweet","RETWEET_REQUEST","uploadImagesAPI","uploadImages","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","watchUploadImages","UPLOAD_IMAGES_REQUEST","likePostAPI","likePost","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","watchLikePost","LIKE_POST_REQUEST","unlikePostAPI","unlikePost","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","watchUnlikePost","UNLIKE_POST_REQUEST","loadPostAPI","loadPost","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","watchLoadPost","LOAD_POST_REQUEST","loadUserPostsAPI","lastId","loadUserPosts","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","watchLoadUserPosts","throttle","LOAD_USER_POSTS_REQUEST","loadHashtagPostsAPI","encodeURIComponent","loadHashtagPosts","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","watchLoadHashtagPosts","LOAD_HASHTAG_POSTS_REQUEST","loadPostsAPI","loadPosts","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","watchLoadPosts","LOAD_POSTS_REQUEST","addPostAPI","addPost","ADD_POST_SUCCESS","ADD_POST_TO_ME","id","ADD_POST_FAILURE","watchAddPost","ADD_POST_REQUEST","removePostAPI","removePost","delay","REMOVE_POST_SUCCESS","REMOVE_POST_OF_ME","REMOVE_POST_FAILURE","watchRemovePost","REMOVE_POST_REQUEST","addCommentAPI","postId","addComment","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","watchAddComment","ADD_COMMENT_REQUEST","postSaga","defaults","baseURL","withCredentials","rootSaga","loggerMiddleware","dispatch","getState","next","configureStore","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","compose","applyMiddleware","composeWithDevTools","store","createStore","reducer","sagaTask","run","createWrapper","debug","initialState","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","loadUserLoading","loadUserDone","loadUserError","followLoading","followDone","followError","unfollowLoading","unfollowDone","unfollowError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","loadFollowersLoading","loadFollowersDone","loadFollowersError","loadFollowingsLoading","loadFollowingsDone","loadFollowingsError","removeFollowerLoading","removeFollowerDone","removeFollowerError","me","userInfo","loginRequestAction","logoutRequestAction","produce","draft","Followers","filter","v","UserId","Followings","unshift","Posts","args","enableES5","mainPosts","singlePost","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","loadUserPostsLoading","loadUserPostsDone","loadUserPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","REMOVE_IMAGE","i","find","PostId","Likers","push","concat","length","Comments"],"mappings":"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","file":"pages/_app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport 'antd/dist/antd.css';\n// import withReduxSaga from 'next-redux-saga'; next 9 부터 이거 필요 없어짐\n\nimport wrapper from '../store/configureStore';\n\nconst NodeBird = ({ Component }) => {\n    return (\n        <>\n            <Head>\n                <meta charSet=\"utf-8\" />\n                <title>NodeBird</title>\n            </Head>\n            <Component />\n        </>\n    );\n};\n\nNodeBird.propTypes = {\n    Component: PropTypes.elementType.isRequired,\n};\n// export default wrapper.withRedux(NodeBird); // next-redux-saga를 적용하기 전\nexport default wrapper.withRedux(NodeBird);","module.exports = require(\"redux-saga\");","import { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\n\nconst rootReducer = (state, action) => {\n    switch (action.type) { \n        case HYDRATE:\n            console.log('HYDRATE', action);\n            return action.payload;\n        default: {\n            const combinedReducer = combineReducers({\n                user,\n                post,\n            });\n            return combinedReducer(state, action);\n        }\n    }\n};\n\nexport default rootReducer;\n\n/* SSR 적용전 \nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\n\nconst rootReducer = combineReducers({\n    index: (state = {}, action) => { // HYDRATE(SSR에 필요)를 넣기 위해서 이 부분이 필요합니다.\n        switch (action.type) {\n            case HYDRATE:\n                console.log('HYDRATE', action); \n                return { ...state, ...action.payload };\n    \n                default:\n                    return state;\n        }\n    },\n    user,\n    post,\n});\n\nexport default rootReducer;\n*/","import { all, fork, put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport { \n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, \n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, \n    UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST,\n    LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE,\n    CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS, CHANGE_NICKNAME_FAILURE,\n    LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, LOAD_FOLLOWINGS_FAILURE,\n    LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWERS_FAILURE,\n    REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS, REMOVE_FOLLOWER_FAILURE,\n    LOAD_MY_INFO_REQUEST, LOAD_MY_INFO_SUCCESS, LOAD_MY_INFO_FAILURE,\n} from '../reducers/user';\n\n//-------------------------------------------------- REMOVE_FOLLOWER\nfunction removeFollowerAPI(data) { return axios.delete(`/user/follower/${data}`); }\n\nfunction* removeFollower(action) {\n    try {\n        const result = yield call(removeFollowerAPI, action.data);\n\n        yield put({\n            type: REMOVE_FOLLOWER_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: REMOVE_FOLLOWER_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchRemoveFollower() {\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\n}\n\n//-------------------------------------------------- LOAD_FOLLOWERS\nfunction loadFollowersAPI() { return axios.get('/user/followers'); }\n\nfunction* loadFollowers(action) {\n    try {\n        const result = yield call(loadFollowersAPI, action.data);\n\n        yield put({\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadFollowers() {\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n}\n\n//-------------------------------------------------- LOAD_FOLLOWINGS\nfunction loadFollowingsAPI() { return axios.get('/user/followings'); }\n\nfunction* loadFollowings(action) {\n    try {\n        const result = yield call(loadFollowingsAPI, action.data);\n\n        yield put({\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadFollowings() {\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n}\n\n//-------------------------------------------------- CHANGE_NICKNAME\nfunction changeNicknameAPI(data) {\n    return axios.patch('/user/nickname', { nickname: data });\n}\n\nfunction* changeNickname(action) {\n    try {\n        const result = yield call(changeNicknameAPI, action.data);\n\n        yield put({\n            type: CHANGE_NICKNAME_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: CHANGE_NICKNAME_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchChangeNickname() {\n    yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\n//-------------------------------------------------- LOAD_MY_INFO\nfunction loadMyInfoAPI() { return axios.get('/user'); }\n\nfunction* loadMyInfo() {\n    try {\n        const result = yield call(loadMyInfoAPI);\n\n        yield put({\n            type: LOAD_MY_INFO_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOAD_MY_INFO_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadMyInfo() {\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\n//-------------------------------------------------- LOAD_USER\nfunction loadUserAPI(data) { return axios.get(`/user/${data}`); }\n\nfunction* loadUser(action) {\n    try {\n        const result = yield call(loadUserAPI, action.data);\n\n        yield put({\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOAD_USER_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadUser() {\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\n//-------------------------------------------------- LOG_IN\nfunction logInAPI(data) {\n    //return axios.post('http://localhost:3065/user/login', data);\n    return axios.post('/user/login', data);\n}\nfunction* logIn(action) {\n    try {\n        const result = yield call(logInAPI, action.data);\n\n        yield put({\n            type: LOG_IN_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: LOG_IN_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLogIn() {\n    yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\n//-------------------------------------------------- LOG_OUT\nfunction logOutAPI() {\n    return axios.post('/user/logout');\n}\nfunction* logOut() {\n    try {\n        yield call(logOutAPI);\n        yield put({\n            type: LOG_OUT_SUCCESS,\n        });\n    } catch (err) {\n        yield put({\n            type: LOG_OUT_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchLogOut() {\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\n//-------------------------------------------------- SIGN_UP\nfunction signUpAPI(data) {\n    return axios.post('/user', data); \n}\nfunction* signUp(action) {\n    try {\n        const result = yield call(signUpAPI, action.data);\n        // yield delay(1000);\n        console.log(result);\n        yield put({\n            type: SIGN_UP_SUCCESS,\n        });\n    } catch (err) {\n        yield put({\n            type: SIGN_UP_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchSignUp() {\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\n//-------------------------------------------------- FOLLOW\nfunction followAPI(data) { return axios.patch(`/user/${data}/follow`); }\n\nfunction* follow(action) {\n    try {\n        const result = yield call(followAPI, action.data);\n        yield put({\n            type: FOLLOW_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        yield put({\n            type: FOLLOW_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchFollow() {\n    yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\n//-------------------------------------------------- UNFOLLOW\nfunction unfollowAPI(data) { return axios.delete(`/user/${data}/follow`); }\n\nfunction* unfollow(action) {\n    try {\n        const result = yield call(unfollowAPI, action.data);\n        yield put({\n            type: UNFOLLOW_SUCCESS,\n            data: result.data, // 현 게시글 작성자 아이디\n        });\n    } catch (err) {\n        yield put({\n            type: UNFOLLOW_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\nfunction* watchUnfollow() {\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\n//-------------------------------------------------- userSaga\nexport default function* userSaga() {\n    yield all([\n        fork(watchRemoveFollower),\n        fork(watchLoadFollowers),\n        fork(watchLoadFollowings),\n        fork(watchChangeNickname),\n        fork(watchLoadUser),\n        fork(watchLoadMyInfo),\n        fork(watchLogIn),\n        fork(watchLogOut),\n        fork(watchSignUp),\n        fork(watchFollow),\n        fork(watchUnfollow),\n    ]);\n}","import { all, takeLatest, fork, put, delay, call, throttle } from 'redux-saga/effects';\n//import shortId from 'shortid';\nimport axios from 'axios';\n\nimport {\n    LIKE_POST_REQUEST, \n    LIKE_POST_SUCCESS, \n    LIKE_POST_FAILURE,\n    \n    UNLIKE_POST_REQUEST, \n    UNLIKE_POST_SUCCESS, \n    UNLIKE_POST_FAILURE,\n    \n    LOAD_POSTS_REQUEST,\n    LOAD_POSTS_SUCCESS, \n    LOAD_POSTS_FAILURE,\n    \n    LOAD_USER_POSTS_REQUEST,\n    LOAD_USER_POSTS_SUCCESS, \n    LOAD_USER_POSTS_FAILURE,\n\n    LOAD_HASHTAG_POSTS_REQUEST,\n    LOAD_HASHTAG_POSTS_SUCCESS, \n    LOAD_HASHTAG_POSTS_FAILURE,\n    \n    LOAD_POST_REQUEST,\n    LOAD_POST_SUCCESS, \n    LOAD_POST_FAILURE,\n    \n    ADD_POST_REQUEST, \n    ADD_POST_SUCCESS, \n    ADD_POST_FAILURE,\n    \n    ADD_COMMENT_REQUEST, \n    ADD_COMMENT_SUCCESS, \n    ADD_COMMENT_FAILURE,\n\n    REMOVE_POST_REQUEST,\n    REMOVE_POST_SUCCESS,\n    REMOVE_POST_FAILURE,\n\n    UPLOAD_IMAGES_REQUEST,\n    UPLOAD_IMAGES_SUCCESS,\n    UPLOAD_IMAGES_FAILURE,\n    \n    RETWEET_REQUEST,\n    RETWEET_SUCCESS,\n    RETWEET_FAILURE,\n    //generateDummyPost,\n\n} from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\n//-------------------------------------------------- RETWEET\n// form 데이터는 { images: data } 이렇게 감싸면 json이 되서 문제가 됩니다.\nfunction retweetAPI(data) { return axios.post(`/post/${data}/retweet`); } \n\nfunction* retweet(action) {\n    try {\n        const result = yield call(retweetAPI, action.data);\n        yield put({\n            type: RETWEET_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: RETWEET_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchRetweet() { yield takeLatest(RETWEET_REQUEST, retweet); }\n\n//-------------------------------------------------- UPLOAD_IMAGES\n// form 데이터는 { images: data } 이렇게 감싸면 json이 되서 문제가 됩니다.\nfunction uploadImagesAPI(data) { return axios.post('/post/images', data); } \n\nfunction* uploadImages(action) {\n    try {\n        const result = yield call(uploadImagesAPI, action.data);\n        yield put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: UPLOAD_IMAGES_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchUploadImages() { yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages); }\n\n//-------------------------------------------------- LIKE_POST\nfunction likePostAPI(data) { return axios.patch(`/post/${data}/like`); }\n\nfunction* likePost(action) {\n    try {\n        const result = yield call(likePostAPI, action.data);\n        yield put({\n            type: LIKE_POST_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: LIKE_POST_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLikePost() { yield takeLatest(LIKE_POST_REQUEST, likePost); }\n\n//-------------------------------------------------- UNLIKE_POST\nfunction unlikePostAPI(data) { return axios.delete(`/post/${data}/like`); }\n\nfunction* unlikePost(action) {\n    try {\n        const result = yield call(unlikePostAPI, action.data);\n        yield put({\n            type: UNLIKE_POST_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: UNLIKE_POST_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchUnlikePost() { yield takeLatest(UNLIKE_POST_REQUEST, unlikePost); }\n\n//-------------------------------------------------- LOAD_POST\nfunction loadPostAPI(data) { return axios.get(`/post/${data}`); }\n\nfunction* loadPost(action) {\n    try {\n        const result = yield call(loadPostAPI, action.data);\n\n        yield put({ \n            type: LOAD_POST_SUCCESS, \n            data: result.data, \n        });\n    } catch (err) {\n        console.error(err);\n        yield put({ \n            type: LOAD_POST_FAILURE, \n            error: err.response.data, \n        });\n    }\n}\n\nfunction* watchLoadPost() { yield takeLatest(LOAD_POST_REQUEST, loadPost); }\n\n//-------------------------------------------------- LOAD_USER_POSTS (특정 유저의 게시글들)\nfunction loadUserPostsAPI(data, lastId) { return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`); }\n\nfunction* loadUserPosts(action) {\n    try {\n        const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n        yield put({\n            type: LOAD_USER_POSTS_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: LOAD_USER_POSTS_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadUserPosts() {\n    yield throttle(5000, LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\n//-------------------------------------------------- LOAD_HASHTAG_POSTS (특정 해시태그의 게시글들)\nfunction loadHashtagPostsAPI(data, lastId) { \n    return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`); \n}\n\nfunction* loadHashtagPosts(action) {\n    try {\n        const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n        yield put({\n            type: LOAD_HASHTAG_POSTS_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: LOAD_HASHTAG_POSTS_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadHashtagPosts() {\n    yield throttle(5000, LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\n//-------------------------------------------------- LOAD_POSTS (게시글들)\nfunction loadPostsAPI(lastId) { return axios.get(`/posts?lastId=${lastId || 0}`); }\n\nfunction* loadPosts(action) {\n    try {\n        const result = yield call(loadPostsAPI, action.lastId);\n        yield put({\n            type: LOAD_POSTS_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: LOAD_POSTS_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchLoadPosts() {\n    yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n    // yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\n//-------------------------------------------------- ADD_POST\nfunction addPostAPI(data) { return axios.post('/post', data); }\n\nfunction* addPost(action) {\n    try {\n        const result = yield call(addPostAPI, action.data);\n        yield put({\n            type: ADD_POST_SUCCESS,\n            data: result.data,\n        });\n        yield put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: ADD_POST_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchAddPost() {\n    yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\n//-------------------------------------------------- REMOVE_POST\nfunction removePostAPI(data) { return axios.delete(`/post/${data}`); }\n\nfunction* removePost(action) {\n    try {\n        const result = yield call(removePostAPI, action.data);\n        yield delay(1000);\n        yield put({\n            type: REMOVE_POST_SUCCESS,\n            data: result.data,\n        });\n        yield put({\n            type: REMOVE_POST_OF_ME,\n            data: result.data,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: REMOVE_POST_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchRemovePost() {\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\n//-------------------------------------------------- ADD_COMMENT\n// ex) /POST /post/1/comment -> 게시글 아이디가 유동적인 경우 \nfunction addCommentAPI(data) { \n    return axios.post(`/post/${data.postId}/comment`, data); \n} \n\nfunction* addComment(action) {\n    try {\n        const result = yield call(addCommentAPI, action.data);\n        yield put({\n            type: ADD_COMMENT_SUCCESS,\n            data: result.data,\n        });\n    } catch (err) {\n        console.error(err);\n        yield put({\n            type: ADD_COMMENT_FAILURE,\n            error: err.response.data,\n        });\n    }\n}\n\nfunction* watchAddComment() {\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchRetweet),\n        fork(watchUploadImages),\n        fork(watchLikePost),\n        fork(watchUnlikePost),\n        fork(watchAddPost),\n        fork(watchLoadPost),\n        fork(watchLoadPosts),\n        fork(watchLoadUserPosts),\n        fork(watchLoadHashtagPosts),\n        fork(watchRemovePost),\n        fork(watchAddComment),\n    ]);\n}\n\n/*\n------------------------ takeLatest의 문제점\n\ntakeLatest 이펙트의 문제점은 여러번의 요청이\n서버로 가기 때문에 응답은 한번만 오더라도\n서버에 데이터가 중복되서 저장될 수 있습니다.\n그런경우 새로고침시 화면에 데이터가 중복되서 나타날수 있습니다.\n\n------------------------ throttle로 문제해결\n\n이 문제를 해결할 수 있는 effects가 throttle 입니다.\n아래는 2초동안 한번의 요청을 받겠다는 설정 입니다.\n\nfunction* watchAddPost() {\n    yield throttle('ADD_POST_REQUEST', addPost, 2000);\n}\n------------------------ 서버검증으로 문제해결\n\ntakeLatest를 사용하면서\n서버에서의 검증을 통해서 연속된 요청의 문제를 해결할 수도 있습니다.\n*/","import { all, fork } from 'redux-saga/effects'; // saga 의 이펙트들\nimport axios from 'axios';\n\nimport userSaga from './user';\nimport postSaga from './post';\n\naxios.defaults.baseURL = 'http://localhost:3065';\naxios.defaults.withCredentials = true;\n\nexport default function* rootSaga() {\n    yield all([\n        fork(userSaga),\n        fork(postSaga),\n    ]);\n}","import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n// import thunkMiddleware from 'redux-thunk';\n\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n    console.log('디스패치', dispatch);\n    console.log('겟스테이트', getState);\n    console.log('액션', action);\n    return next(action);\n};\n\nconst configureStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n\n    const middlewares = [sagaMiddleware, loggerMiddleware];\n\n    const enhancer = process.env.NODE_ENV === 'production' \n    ? compose(applyMiddleware(...middlewares)) // production \n    : composeWithDevTools(applyMiddleware(...middlewares)); // Development\n    \n    const store = createStore(reducer, enhancer);\n\n    store.sagaTask = sagaMiddleware.run(rootSaga);\n    \n    return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n    //이 설정을 통해 개발시에 리덕스에 관해서 자세한 설명이 나옵니다.\n    debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;","module.exports = require(\"next-redux-wrapper\");","//import produce from 'immer';\nimport produce from '../util/produce';\n// import shortid from 'shortid';\n\nexport const initialState = {\n    //------------------------ 내 정보 가져오기\n    loadMyInfoLoading: false,\n    loadMyInfoDone: false,\n    loadMyInfoError: null,\n    //------------------------ 유저정보 가져오기(새로고침 로그인 풀리는 현상 해결 위해)\n    loadUserLoading: false,\n    loadUserDone: false,\n    loadUserError: null,\n    //------------------------ 팔로우\n    followLoading: false,\n    followDone: false,\n    followError: null,\n    //------------------------ 언팔로우\n    unfollowLoading: false,\n    unfollowDone: false,\n    unfollowError: null,\n    //------------------------ 로그인\n    logInLoading: false,\n    logInDone: false,\n    logInError: null,\n    //------------------------ 로그아웃\n    logOutLoading: false,\n    logOutDone: false,\n    logOutError: null,\n    //------------------------ 회원가입\n    signUpLoading: false,\n    signUpDone: false,\n    signUpError: null,\n    //------------------------ 닉네임 변경\n    changeNicknameLoading: false,\n    changeNicknameDone: false,\n    changeNicknameError: null,\n    //------------------------ 팔로워 목록\n    loadFollowersLoading: false,\n    loadFollowersDone: false,\n    loadFollowersError: null,\n    //------------------------ 팔로잉 목록\n    loadFollowingsLoading: false,\n    loadFollowingsDone: false,\n    loadFollowingsError: null,\n    \n    //------------------------ 팔로워 제거\n    removeFollowerLoading: false,\n    removeFollowerDone: false,\n    removeFollowerError: null,\n\n    me: null,\n    userInfo: null,\n    // signUpData: {},\n    // logOutData: {},\n};\n\n// const dummyUser = (data) => ({\n//     ...data,\n//     nickname: '해돋이',\n//     id: 1,\n//     Posts: [{ id: 1 }],\n//     Followings: [{ id: shortid.generate(), nickname: '재원이' }, { id: shortid.generate(), nickname: '선범이' }, { id: shortid.generate(), nickname: '나연' }],\n//     Followers: [{ id: shortid.generate(), nickname: '재원이' }, { id: shortid.generate(), nickname: '선범이' }, { id: shortid.generate(), nickname: '나연' }],\n// });\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST';\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS';\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE';\n\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\n\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\n\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\n\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\n\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\n\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\n\nexport const loginRequestAction = (data) => {\n    return {\n        type: LOG_IN_REQUEST,\n        data,\n    };\n};\n\nexport const logoutRequestAction = () => {\n    return {\n        type: LOG_OUT_REQUEST,\n    };\n};\n\nconst reducer = (state = initialState, action) => {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            //-------------------------------------- LOAD_MY_INFO\n            case LOAD_MY_INFO_REQUEST:\n                draft.loadMyInfoLoading = true;\n                draft.loadMyInfoError = null;\n                draft.loadMyInfoDone = false;\n                break;\n            case LOAD_MY_INFO_SUCCESS:\n                draft.loadMyInfoLoading = false;\n                draft.loadMyInfoDone = true;\n                draft.me = action.data;\n                break;\n            case LOAD_MY_INFO_FAILURE:\n                draft.loadMyInfoLoading = false;\n                draft.loadMyInfoError = action.error;\n                break;\n            //-------------------------------------- REMOVE_FOLLOWER\n            case REMOVE_FOLLOWER_REQUEST:\n                draft.removeFollowerLoading = true;\n                draft.removeFollowerError = null;\n                draft.removeFollowerDone = false;\n                break;\n            case REMOVE_FOLLOWER_SUCCESS:\n                draft.removeFollowerLoading = false;\n                draft.removeFollowerDone = true;\n                draft.me.Followers = draft.me.Followers.filter((v) => v.id !== action.data.UserId);\n                break;\n            case REMOVE_FOLLOWER_FAILURE:\n                draft.removeFollowerLoading = false;\n                draft.removeFollowerError = action.error;\n                break;\n            //-------------------------------------- LOAD_FOLLOWINGS\n            case LOAD_FOLLOWINGS_REQUEST:\n                draft.loadFollowingsLoading = true;\n                draft.loadFollowingsError = null;\n                draft.loadFollowingsDone = false;\n                break;\n            case LOAD_FOLLOWINGS_SUCCESS:\n                draft.loadFollowingsLoading = false;\n                draft.loadFollowingsDone = true;\n                draft.me.Followings = action.data;\n                break;\n            case LOAD_FOLLOWINGS_FAILURE:\n                draft.loadFollowingsLoading = false;\n                draft.loadFollowingsError = action.error;\n                break;\n            //-------------------------------------- LOAD_FOLLOWERS\n            case LOAD_FOLLOWERS_REQUEST:\n                draft.loadFollowersLoading = true;\n                draft.loadFollowersError = null;\n                draft.loadFollowersDone = false;\n                break;\n            case LOAD_FOLLOWERS_SUCCESS:\n                draft.loadFollowersLoading = false;\n                draft.loadFollowersDone = true;\n                draft.me.Followers = action.data;\n                break;\n            case LOAD_FOLLOWERS_FAILURE:\n                draft.loadFollowersLoading = false;\n                draft.loadFollowersError = action.error;\n                break;\n            //-------------------------------------- LOAD_USER\n            case LOAD_USER_REQUEST:\n                draft.loadUserLoading = true;\n                draft.loadUserError = null;\n                draft.loadUserDone = false;\n                break;\n            case LOAD_USER_SUCCESS:\n                draft.loadUserLoading = false;\n                draft.loadUserDone = true;\n                draft.userInfo = action.data;\n                break;\n            case LOAD_USER_FAILURE:\n                draft.loadUserLoading = false;\n                draft.loadUserError = action.error;\n                break;\n            //-------------------------------------- FOLLOW\n            case FOLLOW_REQUEST:\n                draft.followLoading = true;\n                draft.followError = null;\n                draft.followDone = false;\n                break;\n            case FOLLOW_SUCCESS:\n                draft.followLoading = false;\n                draft.followDone = true;\n                draft.me.Followings.unshift({ id: action.data.UserId });\n                break;\n            case FOLLOW_FAILURE:\n                draft.followLoading = false;\n                draft.followError = action.error;\n                break;\n            //-------------------------------------- UNFOLLOW\n            case UNFOLLOW_REQUEST:\n                draft.logInLoading = true;\n                draft.logInError = null;\n                draft.logInDone = false;\n                break;\n            case UNFOLLOW_SUCCESS:\n                draft.logInLoading = false;\n                draft.logInDone = true;\n                draft.me.Followings = draft.me.Followings.filter((v) => v.id !== action.data.UserId);\n                break;\n            case UNFOLLOW_FAILURE:\n                draft.logInLoading = false;\n                draft.logInError = action.error;\n                break;\n            //-------------------------------------- LOG_IN\n            case LOG_IN_REQUEST:\n                draft.logInLoading = true;\n                draft.logInError = null;\n                draft.logInDone = false;\n                break;\n            case LOG_IN_SUCCESS:\n                draft.logInLoading = false;\n                draft.logInDone = true;\n                draft.me = action.data;\n                break;\n            case LOG_IN_FAILURE:\n                draft.logInLoading = false;\n                draft.logInError = action.error;\n                break;\n            //-------------------------------------- LOG_OUT\n            case LOG_OUT_REQUEST:\n                draft.logOutLoading = true;\n                draft.logOutDone = false;\n                draft.logOutError = null;\n                break;\n            case LOG_OUT_SUCCESS:\n                draft.logOutLoading = false;\n                draft.logOutDone = true;\n                draft.me = null;\n                break;\n            case LOG_OUT_FAILURE:\n                draft.logOutLoading = false;\n                draft.logOutError = action.error;\n                break;\n            //-------------------------------------- SIGN_UP\n            case SIGN_UP_REQUEST:\n                draft.signUpLoading = true;\n                draft.signUpDone = false;\n                draft.signUpError = null;\n                break;\n            case SIGN_UP_SUCCESS:\n                draft.signUpLoading = false;\n                draft.signUpDone = true;\n                break;\n            case SIGN_UP_FAILURE:\n                draft.signUpLoading = false;\n                draft.signUpError = action.error;\n                break;\n            //-------------------------------------- CHANGE_NICKNAME\n            case CHANGE_NICKNAME_REQUEST:\n                draft.changeNicknameLoading = true;\n                draft.changeNicknameDone = false;\n                draft.changeNicknameError = null;\n                break;\n            case CHANGE_NICKNAME_SUCCESS:\n                draft.me.nickname = action.data.nickname;\n                draft.changeNicknameLoading = false;\n                draft.changeNicknameDone = true;\n                break;\n            case CHANGE_NICKNAME_FAILURE:\n                draft.changeNicknameLoading = false;\n                draft.changeNicknameError = action.error;\n                break;\n            //-------------------------------------- ADD_POST_TO_ME\n            case ADD_POST_TO_ME:\n                draft.me.Posts.unshift({ id: action.data });\n                break;\n            /* immer 사용하기전\n            return {\n                ...state\n                me: {\n                    ...state.me,\n                    Posts: [{ id: action.data }, ...state.me.Posts];\n                },\n            }; */\n            //-------------------------------------- REMOVE_POST_OF_ME\n            case REMOVE_POST_OF_ME:\n                draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\n                break;\n            /* immer 사용하기 전\n            return {\n                ...state\n                me: {\n                    ...state.me,\n                    Posts: state.me.Posts.filter((v) => v.id !== action.data)\n                },\n            }; */\n            default:\n                break;\n        }\n    });\n};\n\nexport default reducer;","module.exports = require(\"redux-saga/effects\");","module.exports = require(\"immer\");","module.exports = require(\"react\");","import { enableES5, produce } from 'immer';\n\nexport default (...args) => {\n    enableES5();\n    return produce(...args);\n};","// import shortId from 'shortid';\nimport produce from '../util/produce';\n// import faker from 'faker';\n\nexport const initialState = {\n        mainPosts: [],\n        singlePost: null,\n        imagePaths: [], // 이미지 업로드시 경로 저장\n\n        hasMorePosts: true,\n\n        likePostLoading: false,\n        likePostDone: false,\n        likePostError: null,\n\n        unlikePostLoading: false,\n        unlikePostDone: false,\n        unlikePostError: null,\n\n        loadPostLoading: false,\n        loadPostDone: false,\n        loadPostError: null,\n\n        loadPostsLoading: false,\n        loadPostsDone: false,\n        loadPostsError: null,\n\n        loadUserPostsLoading: false,\n        loadUserPostsDone: false,\n        loadUserPostsError: null,\n\n        addPostLoading: false,\n        addPostDone: false,\n        addPostError: null,\n\n        removePostLoading: false,\n        removePostDone: false,\n        removePostError: null,\n\n        addCommentLoading: false,\n        addCommentDone: false,\n        addCommentError: null,\n\n        uploadImagesLoading: false,\n        uploadImagesDone: false,\n        uploadImagesError: null,\n\n        retweetLoading: false,\n        retweetDone: false,\n        retweetError: null,\n};\n\n//-------------------------------------------- Faker 라이브러리로 더미데이터 생성하기\n\n// export const generateDummyPost = (number) => Array(number).fill().map(() => ({\n\n//     id: shortId.generate(),\n\n//     User: {\n//         id: shortId.generate(),\n//         nickname: faker.name.findName(),\n//     },\n\n//     content: faker.lorem.paragraph(),\n\n//     Images: [{ src: faker.image.image() }],\n\n//     Comments: [{\n//         User: {\n//             id: shortId.generate(),\n//             nickname: faker.name.findName(),\n//         },\n//         content: faker.lorem.sentence(),\n//     }],\n\n// }));\n\n// initialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\n\n//-------------------------------------------- ADD_POST에 사용될 더미데이터\n// const dummyPost = (data) => ({\n//     id: data.id,\n//     content: data.content,\n//     User: {\n//         id: 1,\n//         nickname: '해돋이',\n//     },\n//     Images: [],\n//     Comments: [],\n// });\n\n//  \n\n//-------------------------------------------- 액션\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\n\nexport const LOAD_USER_POSTS_REQUEST = 'LOAD_USER_POSTS_REQUEST';\nexport const LOAD_USER_POSTS_SUCCESS = 'LOAD_USER_POSTS_SUCCESS';\nexport const LOAD_USER_POSTS_FAILURE = 'LOAD_USER_POSTS_FAILURE';\n\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\n\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\n\nexport const UPLOAD_IMAGES_REQUEST = 'UPLOAD_IMAGES_REQUEST';\nexport const UPLOAD_IMAGES_SUCCESS = 'UPLOAD_IMAGES_SUCCESS';\nexport const UPLOAD_IMAGES_FAILURE = 'UPLOAD_IMAGES_FAILURE';\n\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\n\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE';\n\n//--------------------------------------------\nexport const addPost = (data) => ({\n        type: ADD_POST_REQUEST,\n        data,\n});\n\nexport const addComment = (data) => ({\n        type: ADD_COMMENT_REQUEST,\n        data,\n});\n\nconst reducer = (state = initialState, action) => {\n        return produce(state, (draft) => {\n                switch (action.type) {\n                        //-------------------------------------- REMOVE_IMAGE\n                        case REMOVE_IMAGE:\n                                draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n                                break;\n                        //-------------------------------------- RETWEET\n                        case RETWEET_REQUEST:\n                                draft.retweetLoading = true;\n                                draft.retweetDone = false;\n                                draft.retweetError = null;\n                                break;\n                        case RETWEET_SUCCESS: {\n                                draft.retweetLoading = false;\n                                draft.retweetDone = true;\n                                draft.mainPosts.unshift(action.data);\n                                break;\n                        }\n                        case RETWEET_FAILURE:\n                                draft.retweetLoading = false;\n                                draft.retweetError = action.error;\n                                break;\n                        //-------------------------------------- UPLOAD_IMAGES\n                        case UPLOAD_IMAGES_REQUEST:\n                                draft.uploadImagesLoading = true;\n                                draft.uploadImagesDone = false;\n                                draft.uploadImagesError = null;\n                                break;\n                        case UPLOAD_IMAGES_SUCCESS: {\n                                draft.imagePaths = action.data;\n                                draft.uploadImagesLoading = false;\n                                draft.uploadImagesDone = true;\n                                break;\n                        }\n                        case UPLOAD_IMAGES_FAILURE:\n                                draft.uploadImagesLoading = false;\n                                draft.uploadImagesError = action.error;\n                                break;\n                        //-------------------------------------- LIKE_POST\n                        case LIKE_POST_REQUEST:\n                                draft.likePostLoading = true;\n                                draft.likePostDone = false;\n                                draft.likePostError = null;\n                                break;\n                        case LIKE_POST_SUCCESS: {\n                                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n                                post.Likers.push({ id: action.data.UserId });\n                                draft.likePostLoading = false;\n                                draft.likePostDone = true;\n                                break;\n                        }\n                        case LIKE_POST_FAILURE:\n                                draft.likePostLoading = false;\n                                draft.likePostError = action.error;\n                                break;\n                        //-------------------------------------- UNLIKE_POST\n                        case UNLIKE_POST_REQUEST:\n                                draft.unlikePostLoading = true;\n                                draft.unlikePostDone = false;\n                                draft.unlikePostError = null;\n                                break;\n                        case UNLIKE_POST_SUCCESS: {\n                                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n                                post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\n                                draft.unlikePostLoading = false;\n                                draft.unlikePostDone = true;\n                                break;\n                        }\n                        case UNLIKE_POST_FAILURE:\n                                draft.unlikePostLoading = false;\n                                draft.unlikePostError = action.error;\n                                break;\n                        //-------------------------------------- LOAD_POST\n                        case LOAD_POST_REQUEST:\n                                draft.loadPostLoading = true;\n                                draft.loadPostDone = false;\n                                draft.loadPostError = null;\n                                break;\n                        case LOAD_POST_SUCCESS:\n                                draft.loadPostLoading = false;\n                                draft.loadPostDone = true;\n                                draft.singlePost = action.data;\n                                break;\n                        case LOAD_POST_FAILURE:\n                                draft.loadPostLoading = false;\n                                draft.loadPostError = action.error;\n                                break;\n                        //-------------------------------------- LOAD_POSTS / LOAD_USER_POSTS / LOAD_HASHTAG_POSTS\n                        case LOAD_USER_POSTS_REQUEST:\n                        case LOAD_HASHTAG_POSTS_REQUEST:\n                        case LOAD_POSTS_REQUEST:\n                                draft.loadPostsLoading = true;\n                                draft.loadPostsDone = false;\n                                draft.loadPostsError = null;\n                                break;\n                        case LOAD_USER_POSTS_SUCCESS:\n                        case LOAD_HASHTAG_POSTS_SUCCESS:\n                        case LOAD_POSTS_SUCCESS:\n                                draft.loadPostsLoading = false;\n                                draft.loadPostsDone = true;\n                                draft.mainPosts = draft.mainPosts.concat(action.data);\n                                console.log('메인포스트 갯수', draft.mainPosts);\n                                draft.hasMorePosts = action.data.length === 10;\n                                break;\n                        case LOAD_USER_POSTS_FAILURE:\n                        case LOAD_HASHTAG_POSTS_FAILURE:\n                        case LOAD_POSTS_FAILURE:\n                                draft.loadPostsLoading = false;\n                                draft.loadPostsError = action.error;\n                                break;\n                        //-------------------------------------- ADD_POST\n                        case ADD_POST_REQUEST:\n                                draft.addPostLoading = true;\n                                draft.addPostDone = false;\n                                draft.addPostError = null;\n                                break;\n                        case ADD_POST_SUCCESS:\n                                draft.addPostLoading = false;\n                                draft.addPostDone = true;\n                                draft.mainPosts.unshift(action.data);\n                                draft.imagePaths = [];\n                                break;\n                        case ADD_POST_FAILURE:\n                                draft.addPostLoading = false;\n                                draft.addPostError = action.error;\n                                break;\n                        //-------------------------------------- REMOVE_POST\n                        case REMOVE_POST_REQUEST:\n                                draft.removePostLoading = true;\n                                draft.removePostDone = false;\n                                draft.removePostError = null;\n                                break;\n                        case REMOVE_POST_SUCCESS:\n                                draft.removePostLoading = false;\n                                draft.removePostDone = true;\n                                draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId); // filter 메소드는 원본을 변경하지 않는 immutable한 메소드이다.\n                                break;\n                        case REMOVE_POST_FAILURE:\n                                draft.removePostLoading = false;\n                                draft.removePostError = action.error;\n                                break;\n                        //-------------------------------------- ADD_COMMENT\n                        case ADD_COMMENT_REQUEST:\n                                draft.addCommentLoading = true;\n                                draft.addCommentDone = false;\n                                draft.addCommentError = null;\n                                break;\n                        case ADD_COMMENT_SUCCESS: {\n                                const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n                                post.Comments.unshift(action.data);\n                                draft.addCommentLoading = false;\n                                draft.addCommentDone = true;\n                                break;\n                        }\n                        case ADD_COMMENT_FAILURE:\n                                draft.addCommentLoading = false;\n                                draft.addCommentError = action.error;\n                                break;\n                        default:\n                                break;\n                }\n        });\n};\n\nexport default reducer;\n\n/* mainPosts 더미 데이터\n{\n    id: 1,\n\n    User: { id: 1, nickname: '해돋이' },\n\n    content: '안녕하세요 트위터 짝퉁 궁금해서 가입해봤습니다~  #해시태그 #익스프레스',\n\n    Images: [\n        { id: shortId.generate(), src: 'https://bit.ly/34S7zRp' },\n        { id: shortId.generate(), src: 'https://bit.ly/3uX6IJH' },\n        { id: shortId.generate(), src: 'https://bit.ly/2TDFv1w' },\n    ],\n\n    Comments: [\n        { User: { id: shortId.generate(), nickname: '재원' }, content: '키보드 윤활해야지~' },\n        { User: { id: shortId.generate(), nickname: '선범' }, content: '여친이랑 산에 가야지~' },\n    ],\n},\n*/","module.exports = require(\"redux\");","module.exports = require(\"redux-devtools-extension\");","module.exports = require(\"next/head\");","module.exports = require(\"axios\");"],"sourceRoot":""}